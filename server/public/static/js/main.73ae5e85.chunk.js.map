{"version":3,"sources":["components/RegisterComponent/RegisterComponent.module.scss","components/List/List.module.scss","actions/index.js","components/LoginComponent/LoginComponent.jsx","components/LoginComponent/index.js","components/RegisterComponent/RegisterComponent.jsx","components/RegisterComponent/index.js","components/AuthorizationModal/AuthorizationModal.jsx","components/AuthorizationModal/index.js","pages/AuthPage/index.js","pages/AuthPage/AuthPage.jsx","components/AddNewBoard/AddNewBoard.jsx","components/AddNewBoard/index.js","components/BoardThumbnail/BoardThumbnail.jsx","components/BoardThumbnail/index.js","components/ProfileButton/index.js","components/ProfileButton/ProfileButton.jsx","components/AssignedCard/AssignedCard.jsx","components/AssignedCard/index.js","components/ToDoList/ToDoList.jsx","components/ToDoList/index.js","components/EditProfileMenu/EditProfileMenu.jsx","components/EditProfileMenu/index.js","components/ProfileMenu/ProfileMenu.jsx","components/ProfileMenu/index.js","components/BoardsList/BoardsList.jsx","components/BoardsList/index.js","components/CardLabels/CardLabels.jsx","components/CardLabels/index.js","components/CardMenu/CardMenu.jsx","components/CardMenu/index.js","components/Card/Card.jsx","components/Card/index.js","components/ReturnButton/index.js","components/ReturnButton/ReturnButton.jsx","components/List/List.jsx","components/List/index.js","components/LabelsMenu/LabelsMenu.jsx","components/LabelsMenu/index.js","components/ArchivedItems/ArchivedItems.jsx","components/ArchivedItems/index.js","components/SearchResult/index.js","components/SearchResult/SearchResult.jsx","components/CollaboratorsMenu/CollaboratorsMenu.jsx","components/CollaboratorsMenu/index.js","components/EditBoardMenu/EditBoardMenu.jsx","components/EditBoardMenu/index.js","components/BoardMenu/index.js","components/BoardMenu/BoardMenu.jsx","components/Board/Board.jsx","components/Board/index.js","components/Modals/Modals.jsx","components/Modals/index.js","pages/AppPage/AppPage.jsx","pages/AppPage/index.js","App/App.js","serviceWorker.js","reducers/index.js","index.js","components/CardMenu/CardMenu.module.scss","components/BoardThumbnail/BoardThumbnail.module.scss","components/Card/Card.module.scss","components/AddNewBoard/AddNewBoard.module.scss","components/LoginComponent/LoginComponent.module.scss","components/EditProfileMenu/EditProfileMenu.module.scss","components/CollaboratorsMenu/CollaboratorsMenu.module.scss","components/Board/Board.module.scss","components/BoardsList/BoardsList.module.scss","components/CardLabels/CardLabels.module.scss","components/BoardMenu/BoardMenu.module.scss","components/ArchivedItems/ArchivedItems.module.scss","components/EditBoardMenu/EditBoardMenu.module.scss","components/ProfileMenu/ProfileMenu.module.scss","components/AssignedCard/AssignedCard.module.scss","components/LabelsMenu/LabelsMenu.module.scss","components/SearchResult/SearchResult.module.scss","components/AuthorizationModal/AuthorizationModal.module.scss","components/ToDoList/ToDoList.module.scss","pages/AuthPage/AuthPage.module.scss","pages/AppPage/AppPage.module.scss","components/ProfileButton/ProfileButton.module.scss","components/ReturnButton/ReturnButton.module.scss","components/Modals/Modals.module.scss"],"names":["module","exports","actionsToggleModal","modal","dispatch","type","payload","actionsGetUser","id","a","async","fetch","then","response","json","results","catch","err","console","log","actionsLoginUser","formData","postConfig","actionsRegisterUser","actionsUpdateCard","putConfig","actionsUpdateList","getState","actionAuthorization","actionsUpdateBoard","actionsGetBoardData","boardID","data","method","body","JSON","stringify","headers","deleteConfig","state","created_by","user_id","LoginComponent","props","componentDidMount","localStorage","getItem","setState","username","parse","handleLoginSubmit","e","preventDefault","dispatchLoginUser","password","handleInput","event","target","value","name","this","isLoggedIn","to","className","styles","loginComponent","loginError","error","form_ul","form_li","autoComplete","onChange","placeholder","form_input","onClick","login_button","optionsContainer","options_span","Component","connect","RegisterComponent","clearInput","defaultState","key","handleStepOneSubmit","errors","confirmPassword","includes","Object","keys","length","step","handleRegisterSubmit","firstname","lastname","dispatchRegisterUser","history","push","email","form_li_error","register_button","withRouter","AuthorizationModal","pathname","container","authBox","AuthPage","window","location","sessionStorage","AddNewBoard","createBoard","url","dispatchCreateBoard","toggleAddNewBoard","stopPropagation","toggleColor","description","onSubmit","addNewBoardForm","nameInput","descriptionContainer","subHeader","colorPickerContainer","colorPickerOptionsContainer","colors","map","color","style","backgroundColor","colorPickerLabel","colorPickerInput","colorPickerCustom","buttonsContainer","initLabels","actionsCreateBoard","BoardThumbnail","board","boardImage","updateBoard","showMenu","dispatchUpdateBoard","is_archived","toggleMenu","archive","unarchive","BoardThumbnailBG","startsWith","background","backgroundSize","backgroundRepeat","thumbnailContainer","textDecoration","unarchiveButton","isNotOwner","menuButton","updateBoardContainer","minRows","checked","defaultChecked","ProfileButton","session","toggleProfileMenu","toUpperCase","substring","AssignedCard","card","componentDidUpdate","prevProps","updateCard","label","position","dispatchUpdateCardFromToDoList","handleNameInput","handleListInput","handleKeyPress","blur","labels","labelsContainer","labelName","Label","cardBody","content","cardName","onKeyPress","inWhere","closeProfileMenu","defaultValue","list_id","lists","sort","b","parseFloat","list","actionsUpdateCardFromToDoList","ToDoList","dispatchGetUser","cardsAssigned","noAssignedCards","index","userID","EditProfileMenu","handleDelete","confirm","dispatchDeleteUser","submitForm","dispatchUpdateUser","toggleThis","EditProfileMenu_form","form_label","form_buttons_container","delete_account_button","actionsUpdateUser","ProfileMenu","handleLogoutClick","dispatchLogoutUser","handleMyProfileClick","showEditProfile","handleToDoClick","showAssignedCards","ProfileMenu_container","menuHeader","exitButton","menu_li","dispatchToggleModal","BoardsList","addNewBoard","toggleArchivedBoards","showArchived","showProfileMenu","BoardsContainer","boards","collaborations","noArchivedBoardsMessage","every","getBoardData","showArchivedButton","dispatchGetBoards","actionsGetBoards","dispatchGetBoardData","CardLabels","newState","reduce","acc","curr","assign","addLabels","card_id","label_ids","dispatchAddLabels","toggleLabelsMenu","toggleSelect","cardLabels","i","cardLabelsHeader","cardLabelsForm","values","hasOwnProperty","checkboxLabel","checkboxInput","checkboxCustom","saveButton","actionsAddLabels","CardMenu","collaborators","assigned_to","openCardLabels","handleCardInput","parseInt","dispatchUpdateCard","toggleArchive","stopPropogation","updateCardContainer","updateCardForm","cardMenuHeader","cardMenuHeaderInputs","updateCardName","listsContainer","labelsButton","details","editDetails","assigned_created_container","assignedTo","createdBy","user","Card","handleLabelInput","draggableId","toString","provided","draggableProps","dragHandleProps","ref","innerRef","card_labelsAndMenu","card_extraInfo","card_extraInfo_userInfo","extraInfo_details","details_top","details_middle","details_bottom","ReturnButton","func","List","updateList","cards","dispatchUpdateList","showNameReturn","createCard","hideCancelButton","board_id","showCancelButton","showCardReturn","dispatchCreateCard","handleListNameClick","handleCardNameClick","archiveList","handleListNameBlur","setTimeout","handleCardInputBlur","setWrapperRef","bind","handleClickOutside","document","addEventListener","removeEventListener","node","wrapperRef","contains","listDragHandle","listHeader","listHeader_form","onBlur","listName","returnButton_span","listMenu","li_listMenuOption","droppableId","droppableProps","listOfCards","AddCard","addCardForm","addCardInput","plusButton","watchLists","actionsCreateCard","LabelsMenu","createOrUpdateLabel","dispatchUpdateLabel","dispatchCreateLabel","handleInputClick","labelForm","labelFormTextInput","submitButton","actionsCreateLabel","actionsUpdateLabel","ArchivedItems","toggleItems","showLists","unarchiveCard","unarchiveList","menuContainer","cardsListsToggleButton","itemsList","archivedContainer","filter","SearchResult","result","checkedLabel","CollaboratorsMenu","currentCollaboratorsIDs","invited","users","searchTerm","dispatchGetUsers","splice","indexOf","isNaN","toggleSelectCollab","dataset","handleInvite","invitations","dispatchInviteCollaborators","handleCancel","collabs_container","collaborator","data-name","collaborator_removed","noCollabs","search_container","search_input","search_ul","search_buttons_li","search_button","data-menu","actionsGetUsers","actionsInviteCollaborators","EditBoardMenu","buttons_archiveBoard","BoardMenu","toggle","menu","labelsMenu","collaboratorsMenu","editBoardMenu","BoardMenuContainer","MenuOption","archivedItems","Board","split","createList","dispatchCreateList","showAddListReturn","handleBoardInput","onDragEnd","destination","source","copyOfPropsLists","listToMove","updatePosition","dispatchUpdateListStore","cardsInOldList","cardsInList","newCardsInList","newCard","dispatchUpdateCardStore","array","destinationIndex","handleAddListClick","handleBoardNameBlur","handleCreateListBlur","boardStyle","backgroundImage","boardHeader","boardName_form","boardName","size","Link","homeButton","boardMenuButton","direction","Lists","addListForm","addList","labelColors","unauthorized","actionsCreateList","actionsUpdateCardStore","actionsUpdateListStore","Modals","toggleModal","showModal","AppPage","App","path","exact","component","strict","from","undefined","Boolean","hostname","match","initialState","reducer","action","updateCardsFromToDo","cardsASsigned","updateCardFromToDoTwo","j","alert","reload","removeItem","setItem","updateUser","getUser","updateListsInStore","updateCardsInStore","updateCards","updateCardsTwo","updateLabel","createLabel","getBoardDataInitLabels","getBoardDataLists","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ae5e85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterComponent\":\"RegisterComponent_RegisterComponent__NlhpB\",\"form_ul\":\"RegisterComponent_form_ul__3Fh93\",\"form_li\":\"RegisterComponent_form_li__1lWu2\",\"form_li_error\":\"RegisterComponent_form_li_error__2PC4l\",\"form_input\":\"RegisterComponent_form_input__13HAa\",\"register_button\":\"RegisterComponent_register_button__39556\",\"optionsContainer\":\"RegisterComponent_optionsContainer__3Hir2\",\"options_span\":\"RegisterComponent_options_span__3ypfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__3YKbb\",\"listOfCards\":\"List_listOfCards__1pK8Q\",\"listDragHandle\":\"List_listDragHandle__3hTIg\",\"listHeader\":\"List_listHeader__20JRz\",\"listHeader_form\":\"List_listHeader_form__2uhvi\",\"returnButton_span\":\"List_returnButton_span__HjCay\",\"listName\":\"List_listName__3yl36\",\"menuButton\":\"List_menuButton__1X4A9\",\"listMenu\":\"List_listMenu__12_9q\",\"exitButton\":\"List_exitButton__2PFIW\",\"li_listMenuOption\":\"List_li_listMenuOption__3d7bh\",\"saveButton\":\"List_saveButton__3H-WR\",\"AddCard\":\"List_AddCard__2vcmU\",\"addCardForm\":\"List_addCardForm__15zdy\",\"plusButton\":\"List_plusButton__1g9f1\",\"addCardInput\":\"List_addCardInput__fljjW\"};","//action types\nexport const GET_BOARDS = \"GET_BOARDS\";\nexport const GET_BOARD_DATA = \"GET_BOARD_DATA\";\nexport const CREATE_BOARD = \"CREATE_BOARD\";\nexport const CREATE_LIST = \"CREATE_LIST\";\nexport const CREATE_CARD = \"CREATE_CARD\";\nexport const CREATE_LABEL = \"CREATE_LABEL\";\nexport const UPDATE_BOARD = \"UPDATE_BOARD\";\nexport const UPDATE_LIST = \"UPDATE_LIST\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const UPDATE_LABEL = \"UPDATE_LABEL\";\nexport const UPDATE_CARD_IN_STORE = \"UPDATE_CARD_IN_STORE\";\nexport const UPDATE_LIST_IN_STORE = \"UPDATE_LIST_IN_STORE\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const REGISTER_USER = \"REGISTER_USER\";\nexport const GET_USER = \"GET_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const GET_USERS = \"GET_USERS\";\nexport const INVITE_COLLABORATORS = \"INVITE_COLLABORATORS\";\nexport const UNAUTHORIZED_ACTION_ERROR = \"UNAUTHORIZED_ACTION_ERROR\";\nexport const UPDATE_CARD_FROM_TODO = \"UPDATE_CARD_FROM_TODO\";\n\nexport const actionsUpdateCardFromToDoList = formData => async dispatch => {\n  await fetch(`/api/cards/${formData.id}`, putConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return dispatch({\n        type: UPDATE_CARD_FROM_TODO,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsInviteCollaborators = formData => async (\n  dispatch,\n  getState\n) => {\n  if (actionAuthorization(dispatch, getState) === true) {\n    await fetch(`/api/boards/invite/${formData.id}`, postConfig(formData))\n      .then(response => {\n        return response.json();\n      })\n      .then(results => {\n        return dispatch({\n          type: INVITE_COLLABORATORS,\n          payload: results\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n\nexport const actionsGetUsers = searchTerm => async dispatch => {\n  if (searchTerm === \"\") {\n    return dispatch({\n      type: GET_USERS,\n      payload: []\n    });\n  }\n  await fetch(`/api/users/all?search=${searchTerm}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(results => {\n      return dispatch({\n        type: GET_USERS,\n        payload: results\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsToggleModal = (modal = false) => dispatch => {\n  return dispatch({\n    type: TOGGLE_MODAL,\n    payload: modal\n  });\n};\n\nexport const actionsDeleteUser = id => async dispatch => {\n  await fetch(`/api/users/${id}/`, deleteConfig())\n    .then(response => {\n      return response.json();\n    })\n    .then(results => {\n      return dispatch({\n        type: DELETE_USER,\n        payload: results\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsUpdateUser = formData => async dispatch => {\n  await fetch(`/api/users/${formData.id}/`, putConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(results => {\n      return dispatch({\n        type: UPDATE_USER,\n        payload: results\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsGetUser = id => async dispatch => {\n  await fetch(`/api/users/${id}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(results => {\n      return dispatch({\n        type: GET_USER,\n        payload: results\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsLoginUser = formData => async dispatch => {\n  await fetch(\"/api/auth/login\", postConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(results => {\n      return dispatch({\n        type: LOGIN_USER,\n        payload: results\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      return dispatch({\n        type: LOGIN_ERROR\n      });\n    });\n};\n\nexport const actionsRegisterUser = formData => async dispatch => {\n  await fetch(\"/api/auth/register\", postConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(results => {\n      return dispatch({ type: REGISTER_USER, payload: results });\n    })\n    .catch(err => {\n      console.log(err);\n      return err;\n    });\n};\n\nexport const actionsLogoutUser = () => async dispatch => {\n  await fetch(\"/api/auth/logout\")\n    .then(response => {\n      response.json();\n    })\n    .then(results => {\n      return dispatch({ type: LOGOUT_USER, payload: results });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsUpdateListStore = formData => dispatch => {\n  return dispatch({\n    type: UPDATE_LIST_IN_STORE,\n    payload: formData\n  });\n};\n\nexport const actionsUpdateCardStore = formData => dispatch => {\n  return dispatch({\n    type: UPDATE_CARD_IN_STORE,\n    payload: formData\n  });\n};\n\nexport const actionsAddLabels = formData => async dispatch => {\n  await fetch(`/api/cards/labels/${formData.card_id}`, putConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return dispatch({\n        type: UPDATE_CARD,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsUpdateLabel = formData => async (dispatch, getState) => {\n  if (actionAuthorization(dispatch, getState) === true) {\n    await fetch(`/api/labels/${formData.id}`, putConfig(formData))\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        return dispatch({\n          type: UPDATE_LABEL,\n          payload: json\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n\nexport const actionsUpdateCard = formData => async dispatch => {\n  await fetch(`/api/cards/${formData.id}`, putConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return dispatch({\n        type: UPDATE_CARD,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsUpdateList = formData => async (dispatch, getState) => {\n  if (actionAuthorization(dispatch, getState) === true) {\n    await fetch(`/api/lists/${formData.id}`, putConfig(formData))\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        return dispatch({\n          type: UPDATE_LIST,\n          payload: json\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n\nexport const actionsUpdateBoard = formData => async (dispatch, getState) => {\n  if (actionAuthorization(dispatch, getState) === true) {\n    await fetch(`/api/boards/${formData.id}`, putConfig(formData))\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        return dispatch({\n          type: UPDATE_BOARD,\n          payload: json\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n\nexport const actionsCreateLabel = formData => async (dispatch, getState) => {\n  if (actionAuthorization(dispatch, getState) === true) {\n    await fetch(`/api/labels/new`, postConfig(formData))\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        return dispatch({\n          type: CREATE_LABEL,\n          payload: json\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n\nexport const actionsCreateCard = formData => async dispatch => {\n  await fetch(`/api/cards/new`, postConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return dispatch({\n        type: CREATE_CARD,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsCreateList = formData => async (dispatch, getState) => {\n  if (actionAuthorization(dispatch, getState) === true) {\n    await fetch(`/api/lists/new`, postConfig(formData))\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        json[\"cards\"] = [];\n        return dispatch({\n          type: CREATE_LIST,\n          payload: json\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n\nexport const actionsCreateBoard = formData => async dispatch => {\n  await fetch(`/api/boards/new`, postConfig(formData))\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return dispatch({\n        type: CREATE_BOARD,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsGetBoardData = boardID => async dispatch => {\n  await fetch(`/api/boards/${boardID}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      return dispatch({\n        type: GET_BOARD_DATA,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsGetBoards = userID => async dispatch => {\n  await fetch(`/api/boards/all/${userID}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      console.log(\"json\", json);\n      return dispatch({\n        type: GET_BOARDS,\n        payload: json\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nconst postConfig = data => {\n  return {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n};\n\nconst putConfig = data => {\n  return {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n};\n\nconst deleteConfig = () => {\n  return {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n};\n\nconst actionAuthorization = (dispatch, getState) => {\n  let state = getState();\n  if (state.created_by && state.user_id) {\n    if (state.created_by !== state.user_id) {\n      return dispatch({\n        type: UNAUTHORIZED_ACTION_ERROR,\n        payload: null\n      });\n    } else {\n      return true;\n    }\n  } else if (!state.created_by && state.user_id) {\n    return true;\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./LoginComponent.module.scss\";\nimport { actionsLoginUser } from \"../../actions\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"user\")) {\n      return this.setState({\n        username: JSON.parse(localStorage.getItem(\"user\"))\n      });\n    }\n  };\n\n  handleLoginSubmit = e => {\n    e.preventDefault();\n\n    let formData = { ...this.state };\n\n    this.props.dispatchLoginUser(formData);\n    return this.setState({ username: \"\", password: \"\" });\n  };\n\n  handleInput = event => {\n    const { value, name } = event.target;\n    const state = { ...this.state };\n    state[name] = value;\n    this.setState(state);\n  };\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to=\"/boards\" />;\n    }\n    return (\n      <div className={styles.loginComponent}>\n        <h3>Log in to Kanban</h3>\n        {this.props.loginError ? (\n          <p className={styles.error}>* Username or password is invalid.</p>\n        ) : null}\n        <form>\n          <ul className={styles.form_ul}>\n            <li className={styles.form_li}>\n              <input\n                type=\"text\"\n                name=\"username\"\n                autoComplete=\"username\"\n                value={this.state.username}\n                onChange={this.handleInput}\n                placeholder=\"Enter username\"\n                className={styles.form_input}\n              />\n            </li>\n            <li className={styles.form_li}>\n              <input\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"current-password\"\n                value={this.state.password}\n                onChange={this.handleInput}\n                placeholder=\"Enter password\"\n                className={styles.form_input}\n              />\n            </li>\n            <li className={styles.form_li}>\n              <button\n                onClick={this.handleLoginSubmit}\n                className={styles.login_button}\n              >\n                Log in\n              </button>\n            </li>\n          </ul>\n        </form>\n        <div className={styles.optionsContainer}>\n          <p>\n            Don't have an account yet?{\" \"}\n            <span className={styles.options_span}>\n              <Link to=\"/register\">Sign up</Link>\n            </span>\n          </p>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoginUser: formData => {\n      return dispatch(actionsLoginUser(formData));\n    }\n  };\n};\n\nexport default LoginComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginComponent);\n","import LoginComponent from \"./LoginComponent\";\nexport default LoginComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionsRegisterUser } from \"../../actions\";\nimport styles from \"./RegisterComponent.module.scss\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      confirmPassword: \"\",\n      email: \"\"\n    };\n  }\n\n  clearInput = () => {\n    let defaultState = this.state;\n    for (let key in defaultState) {\n      defaultState[key] = \"\";\n    }\n    return this.setState(defaultState);\n  };\n\n  handleStepOneSubmit = e => {\n    e.preventDefault();\n\n    let errors = {};\n    if (this.state.password !== this.state.confirmPassword) {\n      errors.password = \"passwords must match\";\n    }\n\n    if (this.state.username === \"\" || this.state.username.includes(\" \")) {\n      errors.username = \"username is required\";\n    } else if (this.state.username.includes(\" \")) {\n      errors.username = \"username cannot contain any spaces.\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      return this.setState({ errors: { ...errors } });\n    } else {\n      return this.setState({ step: 2, errors: {} });\n    }\n  };\n\n  handleRegisterSubmit = e => {\n    e.preventDefault();\n\n    let errors = {};\n\n    if (this.state.firstname === \"\") {\n      errors.firstname = \"your first name is required.\";\n    }\n\n    if (this.state.lastname === \"\") {\n      errors.lastname = \"your last name is required.\";\n    }\n\n    if (Object.keys(errors).length !== 0) {\n      return this.setState({ errors: { ...errors } });\n    } else {\n      let formData = { ...this.state };\n      delete formData.step;\n      delete formData.confirmPassword;\n      delete formData.errors;\n\n      this.props.dispatchRegisterUser(formData);\n      this.clearInput();\n      return this.props.history.push(\"/login\");\n    }\n  };\n\n  handleInput = event => {\n    const { value, name } = event.target;\n    const state = { ...this.state };\n    state[name] = value;\n    this.setState(state);\n  };\n\n  render() {\n    if (!this.state.step) {\n      return (\n        <div className={styles.RegisterComponent}>\n          <h3>Register with Kanban</h3>\n          <form>\n            <ul className={styles.form_ul}>\n              <li className={styles.form_li}>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.handleInput}\n                  placeholder=\"Enter username\"\n                  className={styles.form_input}\n                  autoComplete=\"username\"\n                />\n                {this.state.errors && this.state.errors.username ? (\n                  <p className={styles.form_li_error}>\n                    *{this.state.errors.username}\n                  </p>\n                ) : null}\n              </li>\n              <li className={styles.form_li}>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleInput}\n                  placeholder=\"Enter password\"\n                  autoComplete=\"new-password\"\n                  className={styles.form_input}\n                />\n              </li>\n              <li className={styles.form_li}>\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleInput}\n                  placeholder=\"Confirm Password\"\n                  className={styles.form_input}\n                  autoComplete=\"new-password\"\n                />\n                {this.state.errors && this.state.errors.password ? (\n                  <p className={styles.form_li_error}>\n                    *{this.state.errors.password}\n                  </p>\n                ) : null}\n              </li>\n              <li className={styles.form_li}>\n                <button\n                  onClick={this.handleStepOneSubmit}\n                  className={styles.register_button}\n                >\n                  Sign up\n                </button>\n              </li>\n            </ul>\n          </form>\n          <div className={styles.optionsContainer}>\n            <p>\n              Already have an account?{\" \"}\n              <span className={styles.options_span}>\n                <Link to=\"/login\">Log in</Link>\n              </span>\n            </p>{\" \"}\n          </div>\n        </div>\n      );\n    } else if (this.state.step === 2) {\n      return (\n        <div className={styles.RegisterComponent}>\n          <h3>Register with Kanban</h3>\n          <h5>Step 2 of 2</h5>\n\n          <form>\n            <ul className={styles.form_ul}>\n              <li className={styles.form_li}>\n                <input\n                  type=\"text\"\n                  name=\"firstname\"\n                  autoComplete=\"firstname\"\n                  value={this.state.firstname}\n                  onChange={this.handleInput}\n                  placeholder=\"First Name\"\n                  className={styles.form_input}\n                />\n                {this.state.errors && this.state.errors.firstname ? (\n                  <p className={styles.form_li_error}>\n                    *{this.state.errors.firstname}\n                  </p>\n                ) : null}\n              </li>\n              <li className={styles.form_li}>\n                <input\n                  type=\"text\"\n                  name=\"lastname\"\n                  autoComplete=\"lastname\"\n                  value={this.state.lastname}\n                  onChange={this.handleInput}\n                  placeholder=\"Last Name\"\n                  className={styles.form_input}\n                />\n                {this.state.errors && this.state.errors.lastname ? (\n                  <p className={styles.form_li_error}>\n                    *{this.state.errors.lastname}\n                  </p>\n                ) : null}\n              </li>\n              <li className={styles.form_li}>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleInput}\n                  placeholder=\"Email Address (optional)\"\n                  className={styles.form_input}\n                />\n              </li>\n              <li className={styles.form_li}>\n                <button\n                  onClick={this.handleRegisterSubmit}\n                  className={styles.register_button}\n                >\n                  Sign up\n                </button>\n              </li>\n            </ul>\n          </form>\n          <div className={styles.optionsContainer}>\n            <p>\n              Already have an account?{\" \"}\n              <span className={styles.options_span}>\n                <Link to=\"/login\">Log in</Link>\n              </span>\n            </p>{\" \"}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRegisterUser: formData => {\n      return dispatch(actionsRegisterUser(formData));\n    }\n  };\n};\n\nexport default withRouter(\n  (RegisterComponent = connect(null, mapDispatchToProps)(RegisterComponent))\n);\n","import RegisterComponent from \"./RegisterComponent\";\n\nexport default RegisterComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./AuthorizationModal.module.scss\";\nimport LoginComponent from \"../LoginComponent\";\nimport RegisterComponent from \"../RegisterComponent\";\nimport { actionsLoginUser, actionsRegisterUser } from \"../../actions\";\n\nclass AuthorizationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathname: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.authBox}>\n          {this.props.pathname.includes(\"login\") ? (\n            <LoginComponent />\n          ) : (\n            <RegisterComponent />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRegisterUser: () => {\n      return dispatch(actionsRegisterUser());\n    },\n    dispatchLoginUser: () => {\n      return dispatch(actionsLoginUser());\n    }\n  };\n};\n\nexport default AuthorizationModal = connect(\n  null,\n  mapDispatchToProps\n)(AuthorizationModal);\n","import AuthorizationModal from \"./AuthorizationModal\";\nexport default AuthorizationModal;\n","import AuthPage from \"./AuthPage\";\n\nexport default AuthPage;\n","import React from \"react\";\nimport styles from \"./AuthPage.module.scss\";\nimport AuthorizationModal from \"../../components/AuthorizationModal\";\nimport { Redirect } from \"react-router-dom\";\n\nconst AuthPage = props => {\n  let pathname = window.location.pathname;\n\n  if (sessionStorage.getItem(\"user\")) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className={styles.AuthPage}>\n      <AuthorizationModal pathname={pathname} />\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import React, { Component } from \"react\";\nimport styles from \"./AddNewBoard.module.scss\";\n\nimport { connect } from \"react-redux\";\nimport { actionsCreateBoard } from \"../../actions\";\n\nclass AddNewBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", description: \"\", url: \"#ffffff\" };\n  }\n\n  createBoard = e => {\n    e.preventDefault();\n\n    let formData = { ...this.state };\n\n    formData[\"created_by\"] = JSON.parse(sessionStorage.getItem(\"user\")).id;\n\n    if (!formData.url) {\n      formData.url = \"#ffffff\";\n    }\n\n    this.props.dispatchCreateBoard(formData);\n    return this.setState({ name: \"\", url: \"\" }, this.props.toggleAddNewBoard());\n  };\n\n  handleInput = event => {\n    const { value, name } = event.target;\n    return this.setState({ [name]: value });\n  };\n\n  stopPropagation = e => {\n    return e.stopPropagation();\n  };\n\n  toggleColor = e => {\n    let { id } = e.target;\n    return this.setState({ url: id });\n  };\n\n  render() {\n    return (\n      <div\n        className={styles.AddNewBoard}\n        onClick={this.props.toggleAddNewBoard}\n      >\n        <form\n          onSubmit={this.createBoard}\n          className={styles.addNewBoardForm}\n          onClick={this.stopPropagation}\n        >\n          <h3>Add Board</h3>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Board Name\"\n            onChange={this.handleInput}\n            className={styles.nameInput}\n          />\n          <div className={styles.descriptionContainer}>\n            <h4 className={styles.subHeader}>Description</h4>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              value={this.state.description}\n              placeholder=\"What is this board for?\"\n              onChange={this.handleInput}\n            />\n          </div>\n\n          <div className={styles.colorPickerContainer}>\n            <h4 className={styles.subHeader}>Background Color</h4>\n            <div className={styles.colorPickerOptionsContainer}>\n              {!this.props.colors\n                ? null\n                : Object.keys(this.props.colors).map(color => {\n                    let style = { backgroundColor: color };\n                    return (\n                      <label\n                        key={color}\n                        className={styles.colorPickerLabel}\n                        style={style}\n                        onClick={this.toggleColor}\n                        name={color}\n                      >\n                        <input\n                          type=\"radio\"\n                          className={styles.colorPickerInput}\n                          name=\"color\"\n                          id={color}\n                        />\n                        <span className={styles.colorPickerCustom}></span>\n                      </label>\n                    );\n                  })}\n            </div>\n          </div>\n\n          <div className={styles.buttonsContainer}>\n            <button type=\"submit\">Create</button>\n            <button type=\"button\" onClick={this.props.toggleAddNewBoard}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.initLabels\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchCreateBoard: formData => {\n      dispatch(actionsCreateBoard(formData));\n    }\n  };\n};\n\nexport default AddNewBoard = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddNewBoard);\n","import AddNewBoard from \"./AddNewBoard.jsx\";\n\nexport default AddNewBoard;\n","import React, { Component } from \"react\";\nimport styles from \"./BoardThumbnail.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsUpdateBoard } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nclass BoardThumbnail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false,\n      name: \"\",\n      description: \"\",\n      url: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    let { name, description } = this.props.board;\n    let { url } = this.props.board.boardImage;\n    return this.setState({ name, description, url });\n  };\n\n  updateBoard = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    let formData = { ...this.state };\n    delete formData.showMenu;\n\n    if (formData.name.length === 0) {\n      formData.name = this.props.board.name;\n    }\n\n    console.log(formData);\n\n    formData.id = this.props.board.id;\n\n    this.props.dispatchUpdateBoard(formData);\n    return this.setState({ showMenu: false, is_archived: false });\n  };\n\n  handleInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ [name]: value });\n  };\n\n  toggleColor = e => {\n    let { id } = e.target;\n    return this.setState({ url: id });\n  };\n\n  toggleMenu = e => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.setState({\n      showMenu: !this.state.showMenu,\n      is_archived: false\n    });\n  };\n\n  archive = e => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    if (this.state.is_archived) {\n      return this.setState({ is_archived: !this.state.is_archived });\n    } else {\n      return this.setState({ is_archived: true });\n    }\n  };\n\n  unarchive = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    return this.setState({ is_archived: false }, this.updateBoard);\n  };\n\n  stopPropagation = e => {\n    return e.stopPropagation();\n  };\n\n  render() {\n    let { board } = this.props;\n    let BoardThumbnailBG;\n\n    if (board.boardImage && board.boardImage.url.startsWith(\"#\")) {\n      BoardThumbnailBG = {\n        backgroundColor: board.boardImage.url\n      };\n    } else if (board.boardImage && board.boardImage.url) {\n      BoardThumbnailBG = {\n        background: `url(${board.boardImage.url})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      };\n    }\n\n    return (\n      <div className={styles.thumbnailContainer} style={BoardThumbnailBG}>\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`/b/${this.props.board.id}/${this.props.board.name}`}\n        >\n          <div id={board.id} className={styles.BoardThumbnail}>\n            {board.name}\n            {!this.props.board.is_archived ? (\n              this.props.isNotOwner ? null : (\n                <button\n                  onClick={this.toggleMenu}\n                  className={styles.menuButton}\n                ></button>\n              )\n            ) : (\n              <button\n                onClick={this.unarchive}\n                className={styles.unarchiveButton}\n              >\n                Unarchive\n              </button>\n            )}\n          </div>\n        </Link>\n\n        {this.state.showMenu ? (\n          <div\n            className={styles.updateBoardContainer}\n            onClick={this.toggleMenu}\n          >\n            <form\n              onSubmit={this.updateBoard}\n              className={styles.updateBoard}\n              onClick={this.stopPropagation}\n            >\n              <h3>Edit Board</h3>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleInput}\n                placeholder={this.props.board.name}\n              />\n              <div className={styles.descriptionContainer}>\n                <h4 className={styles.subHeader}>Description</h4>\n\n                <TextareaAutosize\n                  name=\"description\"\n                  minRows={5}\n                  onChange={this.handleInput}\n                  value={this.state.description}\n                ></TextareaAutosize>\n              </div>\n\n              <div className={styles.colorPickerContainer}>\n                <h4 className={styles.subHeader}>Background Color</h4>\n                <div className={styles.colorPickerOptionsContainer}>\n                  {!this.props.colors\n                    ? null\n                    : Object.keys(this.props.colors).map(color => {\n                        let style = { backgroundColor: color };\n                        let checked = false;\n                        if (this.props.board.boardImage.url === color) {\n                          checked = true;\n                        }\n                        return (\n                          <label\n                            key={color}\n                            className={styles.colorPickerLabel}\n                            style={style}\n                            onClick={this.toggleColor}\n                            name={color}\n                          >\n                            <input\n                              type=\"radio\"\n                              className={styles.colorPickerInput}\n                              name=\"color\"\n                              id={color}\n                              defaultChecked={checked}\n                            />\n                            <span className={styles.colorPickerCustom}></span>\n                          </label>\n                        );\n                      })}\n                </div>\n              </div>\n              <div className={styles.buttonsContainer}>\n                <button type=\"submit\">Save</button>\n                <button type=\"button\" onClick={this.toggleMenu}>\n                  Cancel\n                </button>\n                <button\n                  onClick={this.archive}\n                  type=\"button\"\n                  style={\n                    this.state.is_archived\n                      ? { backgroundColor: \"#eb5946\" }\n                      : null\n                  }\n                >\n                  {this.state.is_archived ? \"Unarchive\" : \"Archive\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.initLabels\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateBoard: formData => {\n      return dispatch(actionsUpdateBoard(formData));\n    }\n  };\n};\n\nexport default BoardThumbnail = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardThumbnail);\n","import BoardThumbnail from \"./BoardThumbnail.jsx\";\nexport default BoardThumbnail;\n","import ProfileButton from \"./ProfileButton\";\n\nexport default ProfileButton;\n","import React from \"react\";\nimport styles from \"./ProfileButton.module.scss\";\n\nlet ProfileButton = props => {\n  let session = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  return (\n    <div className={styles.ProfileButton} onClick={props.toggleProfileMenu}>\n      {session.firstname && session.lastname\n        ? session.firstname[0].toUpperCase() + session.lastname[0].toUpperCase()\n        : session.username.substring(0, 2).toUpperCase()}\n    </div>\n  );\n};\n\nexport default ProfileButton;\n","import React, { Component } from \"react\";\nimport styles from \"./AssignedCard.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsUpdateCardFromToDoList } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nclass AssignedCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: {}\n    };\n  }\n\n  componentDidMount = () => {\n    return this.setState({ name: this.props.card.name });\n  };\n\n  componentDidUpdate = prevProps => {\n    if (prevProps.card !== this.props.card) {\n      return this.setState({ name: this.props.card.name });\n    }\n  };\n\n  updateCard = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    let formData = { ...this.state, id: this.props.card.id };\n    delete formData.label;\n    delete formData.showMenu;\n\n    if (formData.name.length === 0) {\n      formData.name = this.props.card.name;\n    }\n\n    formData.position = \"99\";\n\n    return this.props.dispatchUpdateCardFromToDoList(formData);\n  };\n\n  handleNameInput = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n    const { value, name } = e.target;\n    return this.setState({ [name]: value });\n  };\n\n  handleListInput = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n    const { value, name } = e.target;\n    return this.setState({ [name]: value }, this.updateCard);\n  };\n\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.updateCard();\n      return e.target.blur();\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={styles.AssignedCard}\n        onClick={e => {\n          e.stopPropagation();\n        }}\n      >\n        {/* Card's Labels */}\n        {this.props.card.labels ? (\n          <div className={styles.labelsContainer}>\n            {this.props.card.labels.map(label => {\n              let color = { backgroundColor: label.color };\n              let labelName = label.name;\n              return (\n                <div className={styles.Label} key={label.color} style={color}>\n                  {labelName}\n                </div>\n              );\n            })}\n          </div>\n        ) : null}\n\n        {/* Card Name */}\n        <div className={styles.cardBody}>\n          <div className={styles.content}>\n            <TextareaAutosize\n              className={styles.cardName}\n              type=\"text\"\n              name=\"name\"\n              minRows={1}\n              value={this.state.name}\n              onChange={this.handleNameInput}\n              onKeyPress={this.handleKeyPress}\n            />\n            <div className={styles.inWhere}>\n              from{\" \"}\n              <Link\n                style={{ textDecoration: \"underline\", color: \"black\" }}\n                to={`/b/${this.props.card.board.id}/${this.props.card.board.name}`}\n              >\n                <span onClick={this.props.closeProfileMenu}>\n                  {\" \"}\n                  {this.props.card.board.name}\n                </span>\n              </Link>\n              , in list\n              <select\n                name=\"list_id\"\n                onChange={this.handleListInput}\n                defaultValue={this.props.card.list_id}\n              >\n                {this.props.card.board.lists\n                  .sort((a, b) => {\n                    return parseFloat(a.position) - parseFloat(b.position);\n                  })\n                  .map(list => {\n                    if (!list.is_archived) {\n                      return (\n                        <option value={list.id} key={list.id}>\n                          {list.name}\n                        </option>\n                      );\n                    } else {\n                      return null;\n                    }\n                  })}\n              </select>{\" \"}\n            </div>\n          </div>\n\n          {/* Show Card Editor Menu or Unarchive Card Button*/}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    labels: state.labels\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateCardFromToDoList: formData => {\n      return dispatch(actionsUpdateCardFromToDoList(formData));\n    }\n  };\n};\nexport default AssignedCard = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssignedCard);\n","import AssignedCard from \"./AssignedCard\";\nexport default AssignedCard;\n","import React, { Component } from \"react\";\nimport styles from \"./ToDoList.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsGetUser } from \"../../actions\";\nimport AssignedCard from \"../AssignedCard\";\n\nclass ToDoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount = () => {\n    let id = JSON.parse(sessionStorage.getItem(\"user\")).id;\n    return this.props.dispatchGetUser(id);\n  };\n\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      return e.target.blur();\n    }\n  };\n\n  render() {\n    return (\n      <div className={styles.ToDoList}>\n        {this.props.cardsAssigned.length === 0 ? (\n          <div className={styles.noAssignedCards}>\n            You have no cards assigned to you.\n          </div>\n        ) : (\n          this.props.cardsAssigned.map((card, index) => {\n            return (\n              <AssignedCard\n                card={card}\n                key={index}\n                handleKeyPress={this.handleKeyPress}\n                closeProfileMenu={this.props.closeProfileMenu}\n              />\n            );\n          })\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cardsAssigned: state.cardsAssigned\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchGetUser: userID => {\n      return dispatch(actionsGetUser(userID));\n    }\n  };\n};\n\nexport default ToDoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToDoList);\n","import ToDoList from \"./ToDoList\";\nexport default ToDoList;\n","import React, { Component } from \"react\";\nimport styles from \"./EditProfileMenu.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsUpdateUser, actionsDeleteUser } from \"../../actions\";\n\nclass EditProfileMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", firstname: \"\", lastname: \"\", email: \"\" };\n  }\n\n  componentDidMount = () => {\n    let { username, firstname, lastname, email, id } = this.props;\n    return this.setState({\n      username,\n      firstname,\n      lastname,\n      email,\n      id\n    });\n  };\n\n  handleInput = e => {\n    let { name, value } = e.target;\n\n    return this.setState({ [name]: value });\n  };\n\n  handleDelete = e => {\n    if (e) e.preventDefault();\n    let confirmation = window.confirm(\n      \"Are you sure? \\nYour account data, including all of your boards will be deleted and unrecoverable.\"\n    );\n\n    if (confirmation) {\n      return this.props.dispatchDeleteUser();\n    }\n  };\n\n  submitForm = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.props.dispatchUpdateUser(this.state);\n    return this.props.toggleThis();\n  };\n\n  stopPropagation = e => {\n    if (e) {\n      return e.stopPropagation();\n    }\n  };\n  render() {\n    return (\n      <form\n        onSubmit={this.submitForm}\n        className={styles.EditProfileMenu_form}\n        onClick={this.stopPropagation}\n      >\n        <label className={styles.form_label}>\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleInput}\n            className={styles.form_input}\n          />\n        </label>\n        <label className={styles.form_label}>\n          First Name:\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            value={this.state.firstname}\n            onChange={this.handleInput}\n            className={styles.form_input}\n          />\n        </label>\n        <label className={styles.form_label}>\n          Last Name:\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            value={this.state.lastname}\n            onChange={this.handleInput}\n            className={styles.form_input}\n          />\n        </label>\n        <label className={styles.form_label}>\n          Email:\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleInput}\n            className={styles.form_input}\n          />\n        </label>\n        <div className={styles.form_buttons_container}>\n          <button type=\"submit\">Save</button>\n          <button onClick={this.props.toggleThis}>Cancel</button>\n          <button\n            onClick={this.handleDelete}\n            className={styles.delete_account_button}\n          >\n            Delete\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    email: state.email,\n    firstname: state.firstname,\n    lastname: state.lastname,\n    id: state.user_id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateUser: formData => {\n      return dispatch(actionsUpdateUser(formData));\n    },\n    dispatchDeleteUser: () => {\n      let userID = JSON.parse(sessionStorage.getItem(\"user\")).id;\n\n      return dispatch(actionsDeleteUser(userID));\n    }\n  };\n};\n\nexport default EditProfileMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditProfileMenu);\n","import EditProfileMenu from \"./EditProfileMenu\";\nexport default EditProfileMenu;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ProfileMenu.module.scss\";\nimport { actionsLogoutUser, actionsToggleModal } from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport ToDoList from \"../ToDoList\";\nimport EditProfileMenu from \"../EditProfileMenu\";\n\nclass ProfileMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAssignedCards: false,\n      showEditProfile: false\n    };\n  }\n\n  handleLogoutClick = () => {\n    let id = JSON.parse(sessionStorage.getItem(\"user\")).id;\n    return this.props.dispatchLogoutUser(id);\n  };\n\n  handleMyProfileClick = e => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    return this.setState({ showEditProfile: !this.state.showEditProfile });\n  };\n\n  handleToDoClick = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n    return this.setState({ showAssignedCards: !this.state.showAssignedCards });\n  };\n\n  render() {\n    return (\n      <div\n        className={styles.ProfileMenu_container}\n        onClick={this.props.toggleThis}\n      >\n        <ul className={styles.ProfileMenu}>\n          <div className={styles.menuHeader}>\n            <h3>Profile Menu</h3>\n            <button\n              className={styles.exitButton}\n              onClick={this.props.toggleThis}\n            ></button>\n          </div>\n          <hr></hr>\n          <li className={styles.menu_li} onClick={this.handleMyProfileClick}>\n            My Profile\n          </li>\n          {!this.state.showEditProfile ? null : (\n            <EditProfileMenu toggleThis={this.handleMyProfileClick} />\n          )}\n          <li className={styles.menu_li} onClick={this.handleToDoClick}>\n            Assigned Card\n          </li>\n          {!this.state.showAssignedCards ? null : (\n            <ToDoList closeProfileMenu={this.props.toggleThis} />\n          )}\n          <li onClick={this.handleLogoutClick} className={styles.menu_li}>\n            Logout\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogoutUser: id => {\n      return dispatch(actionsLogoutUser(id));\n    },\n    dispatchToggleModal: modal => {\n      return dispatch(actionsToggleModal(modal));\n    }\n  };\n};\n\nexport default withRouter(\n  (ProfileMenu = connect(mapStateToProps, mapDispatchToProps)(ProfileMenu))\n);\n","import ProfileMenu from \"./ProfileMenu\";\n\nexport default ProfileMenu;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./BoardsList.module.scss\";\nimport {\n  actionsGetBoards,\n  actionsGetBoardData,\n  actionsGetUser\n} from \"../../actions\";\nimport AddNewBoard from \"../AddNewBoard\";\nimport BoardThumbnail from \"../BoardThumbnail\";\nimport ProfileButton from \"../ProfileButton\";\nimport ProfileMenu from \"../ProfileMenu\";\n\nclass BoardsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addNewBoard: false,\n      showArchived: false,\n      showProfileMenu: false\n    };\n  }\n\n  componentDidMount = () => {\n    let session = sessionStorage.getItem(\"user\");\n    if (session) {\n      let id = JSON.parse(sessionStorage.getItem(\"user\")).id;\n      return this.props.dispatchGetUser(id);\n    }\n  };\n\n  toggleAddNewBoard = () => {\n    return this.setState({ addNewBoard: !this.state.addNewBoard });\n  };\n\n  toggleArchivedBoards = () => {\n    return this.setState({ showArchived: !this.state.showArchived });\n  };\n\n  toggleProfileMenu = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    return this.setState({ showProfileMenu: !this.state.showProfileMenu });\n  };\n\n  render() {\n    return (\n      <div className={styles.BoardsList}>\n        <ProfileButton\n          username={JSON.parse(sessionStorage.getItem(\"user\")).username}\n          toggleProfileMenu={this.toggleProfileMenu}\n        />\n        {this.state.showProfileMenu ? (\n          <ProfileMenu toggleThis={this.toggleProfileMenu} />\n        ) : null}\n        <h2>My Boards</h2>\n        {/* List of Boards */}\n        <div className={styles.BoardsContainer}>\n          {this.props.boards\n            ? this.props.boards.map(board => {\n                if (!board.is_archived) {\n                  return <BoardThumbnail board={board} key={board.id} />;\n                }\n                return null;\n              })\n            : null}\n\n          {/* Add New Board Button */}\n          <div className={styles.container} onClick={this.toggleAddNewBoard}>\n            <div className={styles.BoardThumbnail}>Create new board</div>\n          </div>\n        </div>\n        <h2>Shared Boards</h2>\n\n        <div className={styles.BoardsContainer}>\n          {this.props.collaborations && this.props.collaborations.length > 0 ? (\n            this.props.collaborations.map(board => {\n              if (!board.is_archived) {\n                return (\n                  <BoardThumbnail\n                    board={board}\n                    key={board.id}\n                    isNotOwner={true}\n                  />\n                );\n              }\n              return null;\n            })\n          ) : (\n            <div className={styles.noArchivedBoardsMessage}>\n              \"You have no shared boards\"\n            </div>\n          )}\n        </div>\n\n        {/* Archived Boards List */}\n        {this.state.showArchived ? (\n          <>\n            <h2>Archived Boards</h2>\n            {this.props.boards.every(board => {\n              return !board.is_archived;\n            }) ? (\n              <div className={styles.noArchivedBoardsMessage}>\n                \"You have no archived boards\"\n              </div>\n            ) : (\n              <div className={styles.BoardsContainer}>\n                {this.props.boards.map(board => {\n                  if (board.is_archived) {\n                    return (\n                      <BoardThumbnail\n                        board={board}\n                        key={board.id}\n                        getBoardData={this.getBoardData}\n                      />\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n            )}\n          </>\n        ) : null}\n\n        {/* Show Archived Boards button */}\n        <button\n          className={styles.showArchivedButton}\n          onClick={this.toggleArchivedBoards}\n        >\n          {!this.state.showArchived ? \"Show archived\" : \"Hide archived\"}\n        </button>\n\n        {/* Add New Board Modal */}\n        {this.state.addNewBoard ? (\n          <AddNewBoard toggleAddNewBoard={this.toggleAddNewBoard} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    boards: state.boards,\n    collaborations: state.collaborations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchGetBoards: userID => {\n      return dispatch(actionsGetBoards(userID));\n    },\n    dispatchGetBoardData: boardID => {\n      return dispatch(actionsGetBoardData(boardID));\n    },\n    dispatchGetUser: userID => {\n      return dispatch(actionsGetUser(userID));\n    }\n  };\n};\n\nexport default BoardsList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardsList);\n","import BoardsList from \"./BoardsList.jsx\";\n\nexport default BoardsList;\n","import React, { Component } from \"react\";\nimport styles from \"./CardLabels.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsAddLabels } from \"../../actions\";\n\nclass CardLabels extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount = () => {\n    let newState = this.props.labels.reduce((acc, curr) => {\n      return Object.assign(acc, { [curr]: false });\n    }, {});\n\n    return this.setState(newState);\n  };\n\n  addLabels = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    let formData = {\n      card_id: this.props.card.id,\n      label_ids: []\n    };\n\n    for (let key in this.state) {\n      if (this.state[key]) {\n        formData.label_ids.push(this.state[key].id);\n      }\n    }\n\n    this.props.dispatchAddLabels(formData);\n    return this.props.toggleLabelsMenu();\n  };\n\n  toggleSelect = e => {\n    let { name } = e.target;\n\n    if (this.state[name]) {\n      return this.setState({ [name]: false });\n    } else {\n      return this.setState({ [name]: this.props.labels[name] });\n    }\n  };\n\n  componentDidMount = () => {\n    let labels = { ...this.props.labels };\n    let cardLabels = [...this.props.card.labels];\n\n    for (let key in labels) {\n      labels[key] = false;\n    }\n\n    for (let i = 0; i < cardLabels.length; i++) {\n      labels[cardLabels[i].color] = cardLabels[i];\n    }\n\n    return this.setState(labels);\n  };\n\n  render() {\n    return (\n      <div className={styles.CardLabels}>\n        {/* Close button */}\n        <div className={styles.cardLabelsHeader}>\n          <h5>Labels</h5>\n          <button\n            onClick={this.props.toggleLabelsMenu}\n            className={styles.exitButton}\n          />\n        </div>\n\n        {/* Label Selector */}\n        <div className={styles.cardLabelsForm}>\n          {Object.values(this.props.labels).map(label => {\n            if (label.hasOwnProperty(\"id\")) {\n              let color = { backgroundColor: label.color };\n              return (\n                <label\n                  key={label.color}\n                  style={color}\n                  className={styles.checkboxLabel}\n                  onClick={this.toggleSelect}\n                  name={label.color}\n                >\n                  <input\n                    type=\"checkbox\"\n                    name={label.color}\n                    defaultChecked={this.state[label.color]}\n                    className={styles.checkboxInput}\n                  />\n                  <span className={styles.checkboxCustom}></span>\n                  {label.name}\n                </label>\n              );\n            }\n            return null;\n          })}\n          <button\n            type=\"submit\"\n            onClick={this.addLabels}\n            className={styles.saveButton}\n          >\n            Save{\" \"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchAddLabels: formData => {\n      return dispatch(actionsAddLabels(formData));\n    }\n  };\n};\n\nexport default CardLabels = connect(null, mapDispatchToProps)(CardLabels);\n","import CardLabels from \"./CardLabels\";\nexport default CardLabels;\n","import React, { Component } from \"react\";\nimport styles from \"./CardMenu.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsUpdateCard } from \"../../actions\";\nimport CardLabels from \"../CardLabels\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nclass CardMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_archived: false,\n      openCardLabels: false,\n      collaborators: []\n    };\n  }\n\n  componentDidMount = () => {\n    return this.setState({\n      name: this.props.card.name,\n      id: this.props.card.id,\n      collaborators: this.props.collaborators,\n      assigned_to: this.props.card.assigned_to\n    });\n  };\n\n  toggleLabelsMenu = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    return this.setState({ openCardLabels: !this.state.openCardLabels });\n  };\n\n  handleCardInput = e => {\n    let { value, name } = e.target;\n\n    if (name === \"list_id\" || name === \"assigned_to\") {\n      value = parseInt(value);\n    }\n    return this.setState({ [name]: value });\n  };\n\n  updateCard = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    let formData = { ...this.state };\n\n    if (formData.name.length === 0) {\n      formData.name = this.props.card.name;\n    }\n    delete formData.openCardLabels;\n    delete formData.collaborators;\n\n    formData.position = \"99\";\n\n    this.props.dispatchUpdateCard(formData);\n    return this.props.toggleMenu();\n  };\n\n  toggleArchive = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    return this.setState({ is_archived: !this.state.is_archived });\n  };\n\n  stopPropagation = e => {\n    if (e) {\n      return e.stopPropagation();\n    }\n  };\n\n  render() {\n    return (\n      <div className={styles.CardMenu} onClick={this.props.toggleMenu}>\n        <div\n          onClick={this.stopPropogation}\n          className={styles.updateCardContainer}\n        >\n          {/* Edit Name */}\n          <form\n            onSubmit={this.updateCard}\n            className={styles.updateCardForm}\n            onClick={this.stopPropagation}\n          >\n            <div className={styles.cardMenuHeader}>\n              <div className={styles.cardMenuHeaderInputs}>\n                <TextareaAutosize\n                  name=\"name\"\n                  minRows={1}\n                  value={this.state.name}\n                  onChange={this.handleCardInput}\n                  className={styles.updateCardName}\n                />\n                <button className={styles.exitButton} />\n              </div>\n              {/* Edit List */}\n\n              <div className={styles.listsContainer}>\n                in list\n                <select\n                  name=\"list_id\"\n                  onChange={this.handleCardInput}\n                  defaultValue={this.props.card.list_id}\n                >\n                  {this.props.lists.map(list => {\n                    if (!list.is_archived) {\n                      return (\n                        <option value={list.id} key={list.id}>\n                          {list.name}\n                        </option>\n                      );\n                    } else return null;\n                  })}\n                </select>\n              </div>\n            </div>\n\n            <h4>Labels</h4>\n            {/* Toggle Labels Menu */}\n            {this.props.card.labels ? (\n              <div className={styles.labelsContainer}>\n                {this.props.card.labels.map(label => {\n                  let color = { backgroundColor: label.color };\n                  let labelName = this.props.labels[label.color].name;\n                  return (\n                    <div\n                      className={styles.Label}\n                      key={label.color}\n                      style={color}\n                    >\n                      {labelName}\n                    </div>\n                  );\n                })}\n                <div>\n                  <button\n                    onClick={this.toggleLabelsMenu}\n                    className={styles.labelsButton}\n                  />\n\n                  {/* Labels Menu */}\n                  {this.state.openCardLabels ? (\n                    <CardLabels\n                      card={this.props.card}\n                      labels={this.props.labels}\n                      toggleLabelsMenu={this.toggleLabelsMenu}\n                    />\n                  ) : null}\n                </div>\n              </div>\n            ) : null}\n\n            {/* Edit Details */}\n            <h4>Description</h4>\n            <TextareaAutosize\n              type=\"text\"\n              name=\"details\"\n              // cols=\"30\"\n              minRows={1}\n              onChange={this.handleCardInput}\n              defaultValue={this.props.card.details}\n              value={this.state.details}\n              className={styles.editDetails}\n            />\n            {/* Assign To and Created By*/}\n\n            <div className={styles.assigned_created_container}>\n              <p className={styles.assignedTo}>\n                assigned to{\" \"}\n                <select\n                  name=\"assigned_to\"\n                  value={this.state.assigned_to ? this.state.assigned_to : \"\"}\n                  onChange={this.handleCardInput}\n                >\n                  <option value=\"\">unassigned</option>\n                  <option value={this.props.createdBy.id}>\n                    {this.props.createdBy.firstname +\n                      \" \" +\n                      this.props.createdBy.lastname}\n                  </option>\n                  {this.state.collaborators\n                    ? this.state.collaborators.map(user => {\n                        return (\n                          <option value={user.id} key={user.id}>\n                            {user.firstname + \" \" + user.lastname}\n                          </option>\n                        );\n                      })\n                    : null}\n                </select>\n              </p>\n              <p className={styles.createdBy}>\n                {this.props.card.createdBy.firstname +\n                  \" \" +\n                  this.props.card.createdBy.lastname}\n              </p>\n            </div>\n\n            <div className={styles.buttonsContainer}>\n              {/* Archive Card Button */}\n              <button\n                onClick={this.toggleArchive}\n                style={\n                  this.state.is_archived\n                    ? { backgroundColor: \"#eb5946\", color: \"white\" }\n                    : null\n                }\n              >\n                {this.state.is_archived ? \"Unarchive\" : \"Archive\"}\n              </button>\n              <button type=\"submit\" className={styles.saveButton}>\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lists: state.lists,\n    labels: state.labels,\n    collaborators: state.collaborators,\n    user_id: state.user_id,\n    createdBy: state.createdBy\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateCard: formData => {\n      return dispatch(actionsUpdateCard(formData));\n    }\n  };\n};\n\nexport default CardMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CardMenu);\n","import CardMenu from \"./CardMenu\";\nexport default CardMenu;\n","import React, { Component } from \"react\";\nimport styles from \"./Card.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsUpdateCard } from \"../../actions\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nimport CardMenu from \"../CardMenu\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false,\n      label: {}\n    };\n  }\n\n  componentDidMount = () => {\n    return this.setState({ name: this.props.card.name });\n  };\n\n  componentDidUpdate = prevProps => {\n    if (prevProps.card !== this.props.card) {\n      return this.setState({ name: this.props.card.name });\n    }\n  };\n\n  updateCard = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    let formData = { ...this.state, id: this.props.card.id };\n    delete formData.label;\n    delete formData.showMenu;\n\n    if (formData.name.length === 0) {\n      formData.name = this.props.card.name;\n    }\n\n    return this.props.dispatchUpdateCard(formData);\n  };\n\n  toggleMenu = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n    return this.setState({ showMenu: !this.state.showMenu });\n  };\n\n  handleCardInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ [name]: value });\n  };\n\n  handleLabelInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ label: { [name]: value } });\n  };\n\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.updateCard();\n      return e.target.blur();\n    }\n  };\n\n  render() {\n    return (\n      <Draggable\n        draggableId={this.props.card.id.toString()}\n        index={this.props.index}\n      >\n        {provided => {\n          return (\n            <div\n              className={styles.Card}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className={styles.card_labelsAndMenu}>\n                {/* Card's Labels */}\n                {this.props.card.labels ? (\n                  <div className={styles.labelsContainer}>\n                    {this.props.card.labels.map(label => {\n                      let color = { backgroundColor: label.color };\n                      let labelName = this.props.labels[label.color].name;\n                      return (\n                        <div\n                          className={styles.Label}\n                          key={label.color}\n                          style={color}\n                        >\n                          <span> {labelName}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                ) : null}\n\n                {/* Show Card Editor Menu or Unarchive Card Button*/}\n\n                <button\n                  onClick={this.toggleMenu}\n                  className={styles.menuButton}\n                ></button>\n              </div>\n\n              {/* Card Name */}\n              <div className={styles.cardBody}>\n                <TextareaAutosize\n                  className={styles.cardName}\n                  type=\"text\"\n                  name=\"name\"\n                  minRows={1}\n                  value={this.state.name}\n                  onChange={this.handleCardInput}\n                  onKeyPress={this.handleKeyPress}\n                />\n              </div>\n              <div className={styles.card_extraInfo} onClick={this.toggleMenu}>\n                <div className={styles.card_extraInfo_userInfo}>\n                  {/* assigned to */}\n                  {this.props.card.assignedTo ? (\n                    <span>\n                      assigned to: {this.props.card.assignedTo.firstname}\n                    </span>\n                  ) : null}\n                </div>\n                {!this.props.card.details ? null : (\n                  <div className={styles.extraInfo_details}>\n                    <hr className={styles.details_top}></hr>\n                    <hr className={styles.details_middle} />\n                    <hr className={styles.details_bottom} />\n                  </div>\n                )}\n              </div>\n\n              {/* Card Menu */}\n              {!this.state.showMenu ? null : (\n                <CardMenu\n                  card={this.props.card}\n                  toggleMenu={this.toggleMenu}\n                  updateCard={this.updateCard}\n                ></CardMenu>\n              )}\n            </div>\n          );\n        }}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    labels: state.labels\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateCard: formData => {\n      return dispatch(actionsUpdateCard(formData));\n    }\n  };\n};\n\nexport default Card = connect(mapStateToProps, mapDispatchToProps)(Card);\n","import Card from \"./Card\";\nexport default Card;\n","import ReturnButton from \"./ReturnButton\";\nexport default ReturnButton;\n","import React from \"react\";\nimport styles from \"./ReturnButton.module.scss\";\n\nconst ReturnButton = props => {\n  return (\n    <button type=\"submit\" className={styles.ReturnButton} onSubmit={props.func}>\n      Save\n    </button>\n  );\n};\n\nexport default ReturnButton;\n","import React, { Component } from \"react\";\nimport styles from \"./List.module.scss\";\nimport { connect } from \"react-redux\";\nimport Card from \"../Card\";\nimport { actionsCreateCard, actionsUpdateList } from \"../../actions\";\nimport ReturnButton from \"../ReturnButton\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n\n    this.state = {\n      list: { name: \"\" },\n      showMenu: false,\n      showCancelButton: false,\n      showNameReturn: false,\n      showCardReturn: false,\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n    return this.setState({ list: { ...this.props.list } });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.list !== prevProps.list) {\n      return this.setState({ list: this.props.list });\n    }\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target) &&\n      event.target.id !== \"listMenuButton\"\n    ) {\n      return this.setState({ showMenu: !this.state.showMenu });\n    }\n  }\n\n  updateList = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    let formData = { ...this.state.list, id: this.props.list.id };\n    if (formData.name.length === 0) {\n      formData.name = this.props.list.name;\n    }\n\n    if (formData.cards) {\n      delete formData.cards;\n    }\n\n    this.props.dispatchUpdateList(formData);\n    return this.setState({ showMenu: false, showNameReturn: false });\n  };\n\n  createCard = e => {\n    e.preventDefault();\n\n    if (this.state.name.length === 0) {\n      return this.hideCancelButton();\n    }\n    let cards = this.props.cards;\n    let position;\n    if (!this.props.cards || cards.length === 0) {\n      position = 1;\n    } else {\n      position = parseFloat(parseFloat(cards[cards.length - 1].position) + 1);\n    }\n    let formData = {\n      ...this.state,\n      list_id: this.props.list.id,\n      position,\n      created_by: JSON.parse(sessionStorage.getItem(\"user\")).id,\n      board_id: this.props.list.board_id\n    };\n\n    delete formData.list;\n    delete formData.showMenu;\n    delete formData.showCancelButton;\n    delete formData.showCardReturn;\n    delete formData.showNameReturn;\n\n    this.props.dispatchCreateCard(formData);\n    return this.setState(\n      { name: \"\", showCardReturn: false },\n      this.hideCancelButton()\n    );\n  };\n\n  handleCardInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ [name]: value });\n  };\n\n  handleListInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ list: { [name]: value } });\n  };\n\n  handleListNameClick = e => {\n    e.preventDefault();\n    return this.setState({ showNameReturn: true });\n  };\n\n  handleCardNameClick = e => {\n    e.preventDefault();\n    return this.setState({ showCardReturn: true }, this.showCancelButton);\n  };\n\n  toggleMenu = e => {\n    return this.setState({ showMenu: !this.state.showMenu });\n  };\n\n  archiveList = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (this.state.list.is_archived) {\n      return this.setState({\n        list: { ...this.state.list, is_archived: !this.state.list.is_archived }\n      });\n    } else {\n      return this.setState({ list: { ...this.state.list, is_archived: true } });\n    }\n  };\n\n  showCancelButton = () => {\n    return this.setState({ showCancelButton: true });\n  };\n\n  hideCancelButton = e => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return this.setState({\n      showCancelButton: false,\n      showCardReturn: false,\n      name: \"\"\n    });\n  };\n\n  handleListNameBlur = e => {\n    e.preventDefault();\n\n    return setTimeout(() => {\n      return this.setState({\n        showNameReturn: false,\n        list: { name: this.props.list.name }\n      });\n    }, 500);\n  };\n\n  handleCardInputBlur = e => {\n    e.preventDefault();\n\n    return setTimeout(() => {\n      return this.setState({\n        showCardReturn: false,\n        name: \"\",\n        showCancelButton: false\n      });\n    }, 500);\n  };\n\n  render() {\n    return (\n      <Draggable\n        draggableId={\"draggableList_\" + this.props.list.id.toString()}\n        index={this.props.index}\n      >\n        {provided => {\n          return (\n            <div\n              className={styles.List}\n              key={this.props.list.id}\n              {...provided.draggableProps}\n              ref={provided.innerRef}\n            >\n              <div\n                className={styles.listDragHandle}\n                {...provided.dragHandleProps}\n              >\n                {\" \"}\n              </div>\n              {/* List Name */}\n              <div className={styles.listHeader}>\n                <form\n                  onSubmit={this.updateList}\n                  className={styles.listHeader_form}\n                  onBlur={this.handleListNameBlur}\n                >\n                  <input\n                    type=\"text\"\n                    onChange={this.handleListInput}\n                    value={this.state.list.name}\n                    name=\"name\"\n                    onKeyPress={this.props.handleKeyPress}\n                    className={styles.listName}\n                    onClick={this.handleListNameClick}\n                  />\n                  {this.state.showNameReturn ? (\n                    <span className={styles.returnButton_span}>\n                      <ReturnButton func={this.updateList} />\n                    </span>\n                  ) : null}\n                </form>\n                {/* Menu/Unarchive Button */}\n                <button\n                  id=\"listMenuButton\"\n                  onClick={this.toggleMenu}\n                  className={styles.menuButton}\n                ></button>\n              </div>\n              {/* List Menu */}\n              {!this.state.showMenu ? null : (\n                <ul className={styles.listMenu} ref={this.setWrapperRef}>\n                  <li className={styles.listHeader}>\n                    <h4>List Actions</h4>\n                    <button\n                      className={styles.exitButton}\n                      onClick={this.toggleMenu}\n                    />\n                  </li>\n                  <hr />\n                  <li\n                    style={\n                      this.state.list.is_archived\n                        ? { backgroundColor: \"#eb5946\", color: \"white\" }\n                        : null\n                    }\n                    className={styles.li_listMenuOption}\n                    onClick={this.archiveList}\n                  >\n                    {this.state.list.is_archived\n                      ? \"Unarchive List\"\n                      : \"Archive List\"}\n                  </li>\n                  <button\n                    className={styles.saveButton}\n                    onClick={this.updateList}\n                  >\n                    Save\n                  </button>\n                </ul>\n              )}\n              {/* Cards */}\n              {this.props.list.is_archived ? null : (\n                <Droppable\n                  droppableId={this.props.list.id.toString()}\n                  type=\"cards\"\n                >\n                  {provided => {\n                    return (\n                      <ul\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        className={styles.listOfCards}\n                      >\n                        {this.props.cards\n                          ? this.props.cards.map((card, index) => {\n                              if (\n                                card.is_archived === false &&\n                                card.list_id === this.props.list.id\n                              ) {\n                                return (\n                                  <Card\n                                    card={card}\n                                    key={card.id}\n                                    index={index}\n                                    handleKeyPress={this.props.handleKeyPress}\n                                  />\n                                );\n                              } else {\n                                return null;\n                              }\n                            })\n                          : null}\n                        {provided.placeholder}\n                      </ul>\n                    );\n                  }}\n                </Droppable>\n              )}\n              {/* Add Card */}\n              <div className={styles.AddCard}>\n                <form onSubmit={this.createCard} className={styles.addCardForm}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={styles.addCardInput}\n                    value={this.state.name}\n                    placeholder=\"+ Add a card\"\n                    onChange={this.handleCardInput}\n                    onKeyPress={this.props.handleKeyPress}\n                    onClick={this.handleCardNameClick}\n                    autoComplete=\"off\"\n                    onBlur={this.handleCardInputBlur}\n                  />\n                  {this.state.showCardReturn ? (\n                    <button type=\"submit\" className={styles.plusButton} />\n                  ) : null}\n                </form>\n                {this.state.showCancelButton ? (\n                  <button\n                    onClick={this.hideCancelButton}\n                    className={styles.exitButton}\n                  ></button>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    watchLists: state.lists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchCreateCard: formData => {\n      dispatch(actionsCreateCard(formData));\n    },\n    dispatchUpdateList: formData => {\n      dispatch(actionsUpdateList(formData));\n    }\n  };\n};\n\nexport default List = connect(mapStateToProps, mapDispatchToProps)(List);\n","import List from \"./List\";\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./LabelsMenu.module.scss\";\nimport { actionsCreateLabel, actionsUpdateLabel } from \"../../actions\";\n\nclass LabelsMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  createOrUpdateLabel = e => {\n    e.preventDefault();\n    // update\n    if (e.target.id) {\n      let { name, id } = e.target;\n\n      let formData = {\n        color: name,\n        name: this.state[name],\n        board_id: this.props.board_id,\n        id\n      };\n      return this.props.dispatchUpdateLabel(formData);\n    } else {\n      // create\n      let { name } = e.target;\n\n      let formData = {\n        color: name,\n        name: this.state[name],\n        board_id: this.props.board_id\n      };\n\n      return this.props.dispatchCreateLabel(formData);\n    }\n  };\n\n  handleLabelInput = e => {\n    const { value, name } = e.target;\n\n    return this.setState({ [name]: value });\n  };\n\n  handleInputClick = e => {\n    const { name, value } = e.target;\n    return this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className={styles.LabelsMenu}>\n        {/* Labels */}\n        {Object.values(this.props.labels).map(label => {\n          let color = { backgroundColor: label.color };\n          return (\n            <form\n              onSubmit={this.createOrUpdateLabel}\n              style={color}\n              key={label.color}\n              name={label.color}\n              id={label.id}\n              className={styles.labelForm}\n              onBlur={this.createOrUpdateLabel}\n            >\n              <input\n                type=\"text\"\n                name={label.color}\n                defaultValue={label.name}\n                onChange={this.handleLabelInput}\n                onClick={this.handleInputClick}\n                className={styles.labelFormTextInput}\n              />\n              <input\n                type=\"submit\"\n                value={label.name ? \"Edit\" : \"Save\"}\n                className={styles.submitButton}\n              />\n            </form>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    board_id: state.id,\n    labels: state.labels\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchCreateLabel: formData => {\n      return dispatch(actionsCreateLabel(formData));\n    },\n    dispatchUpdateLabel: formData => {\n      return dispatch(actionsUpdateLabel(formData));\n    }\n  };\n};\n\nexport default LabelsMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelsMenu);\n","import LabelsMenu from \"./LabelsMenu\";\nexport default LabelsMenu;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ArchivedItems.module.scss\";\nimport { actionsUpdateCard, actionsUpdateList } from \"../../actions\";\n\nclass ArchivedItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLists: false\n    };\n  }\n\n  toggleItems = () => {\n    return this.setState({ showLists: !this.state.showLists });\n  };\n\n  unarchiveCard = e => {\n    let { id } = e.target;\n    let formData = { id, is_archived: false };\n\n    return this.props.dispatchUpdateCard(formData);\n  };\n\n  unarchiveList = e => {\n    let { id } = e.target;\n    let formData = { id, is_archived: false };\n\n    return this.props.dispatchUpdateList(formData);\n  };\n\n  render() {\n    return (\n      <div className={styles.ArchivedItems}>\n        {/* Lists/Cards Toggle */}\n        <div className={styles.menuContainer}>\n          <h4>{this.state.showLists ? \"Archived Lists\" : \"Archived Cards\"}</h4>\n          <button\n            onClick={this.toggleItems}\n            className={styles.cardsListsToggleButton}\n          >\n            Show {this.state.showLists ? \"Cards\" : \"Lists\"}\n          </button>\n        </div>\n\n        {/* List of Items */}\n        <ul className={styles.itemsList}>\n          {this.state.showLists\n            ? this.props.lists.map(list => {\n                return (\n                  <div className={styles.archivedContainer} key={list.id}>\n                    {list.name}\n                    <button\n                      onClick={this.unarchiveList}\n                      id={list.id}\n                      className={styles.unarchiveButton}\n                    >\n                      Unarchive\n                    </button>\n                  </div>\n                );\n              })\n            : this.props.cards.map(card => {\n                return (\n                  <div className={styles.archivedContainer} key={card.id}>\n                    <p>{card.name}</p>\n                    <button\n                      onClick={this.unarchiveCard}\n                      id={card.id}\n                      className={styles.unarchiveButton}\n                    >\n                      Unarchive\n                    </button>\n                  </div>\n                );\n              })}\n        </ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards.filter(card => {\n      return card.is_archived;\n    }),\n    lists: state.lists.filter(list => {\n      return list.is_archived;\n    })\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateCard: formData => {\n      return dispatch(actionsUpdateCard(formData));\n    },\n    dispatchUpdateList: formData => {\n      return dispatch(actionsUpdateList(formData));\n    }\n  };\n};\n\nexport default ArchivedItems = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ArchivedItems);\n","import ArchivedItems from \"./ArchivedItems\";\n\nexport default ArchivedItems;\n","import SearchResult from \"./SearchResult\";\n\nexport default SearchResult;\n","import React from \"react\";\nimport styles from \"./SearchResult.module.scss\";\n\nconst SearchResult = props => {\n  return (\n    <li className={styles.SearchResult}>\n      <label\n        name={props.result.id}\n        className={props.checked ? styles.checkedLabel : styles.checkboxLabel}\n        onClick={props.toggleSelect}\n      >\n        {props.result.firstname + \" \" + props.result.lastname}\n        <input\n          type=\"checkbox\"\n          name={props.result.id}\n          className={styles.checkboxInput}\n          defaultChecked={props.checked ? true : false}\n        />\n      </label>\n    </li>\n  );\n};\n\nexport default SearchResult;\n","import React, { Component } from \"react\";\nimport styles from \"./CollaboratorsMenu.module.scss\";\nimport { connect } from \"react-redux\";\nimport { actionsGetUsers, actionsInviteCollaborators } from \"../../actions\";\nimport SearchResult from \"../SearchResult\";\n\nclass CollaboratorsMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchTerm: \"\", collaborators: [], users: [], invited: [] };\n  }\n\n  componentDidMount = () => {\n    if (this.props.collaborators) {\n      let currentCollaboratorsIDs = this.props.collaborators.map(user => {\n        return user.id;\n      });\n\n      return this.setState({\n        collaborators: this.props.collaborators,\n        invited: currentCollaboratorsIDs\n      });\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    if (prevProps.users !== this.props.users) {\n      return this.setState({ users: this.props.users });\n    }\n\n    if (prevProps.collaborators !== this.props.collaborators) {\n      let currentCollaboratorsIDs = this.props.collaborators.map(user => {\n        return user.id;\n      });\n      return this.setState({\n        collaborators: this.props.collaborators,\n        invited: currentCollaboratorsIDs\n      });\n    }\n  };\n\n  handleInput = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    return this.setState({ searchTerm: e.target.value }, () => {\n      this.props.dispatchGetUsers(this.state.searchTerm);\n    });\n  };\n\n  toggleSelect = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    let toggleSelect = [...this.state.invited];\n    let id = parseInt(e.target.name);\n\n    if (this.state.invited.includes(id)) {\n      toggleSelect.splice(toggleSelect.indexOf(id), 1);\n    } else if (!isNaN(id)) {\n      toggleSelect.push(id);\n    }\n\n    return this.setState({ invited: toggleSelect });\n  };\n\n  toggleSelectCollab = e => {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    let toggleSelect = [...this.state.invited];\n    let id = parseInt(e.target.dataset.name);\n\n    if (this.state.invited.includes(id)) {\n      toggleSelect.splice(toggleSelect.indexOf(id), 1);\n    } else if (!isNaN(id)) {\n      toggleSelect.push(id);\n    }\n\n    return this.setState({ invited: toggleSelect });\n  };\n\n  handleInvite = () => {\n    let formData = { invitations: this.state.invited, id: this.props.id };\n\n    return this.setState({ searchTerm: \"\", users: [] }, () => {\n      return this.props.dispatchInviteCollaborators(formData);\n    });\n  };\n\n  handleCancel = e => {\n    return this.props.toggleMenu(e);\n  };\n\n  render() {\n    return (\n      <ul className={styles.CollaboratorsMenu}>\n        <li className={styles.collabs_container}>\n          {this.state.collaborators && this.state.collaborators.length > 0 ? (\n            this.state.collaborators.map(user => {\n              if (this.state.invited.includes(user.id)) {\n                return (\n                  <span\n                    className={styles.collaborator}\n                    key={user.id}\n                    onClick={this.toggleSelectCollab}\n                    data-name={user.id}\n                  >\n                    {user.firstname[0].toUpperCase() +\n                      user.lastname[0].toUpperCase()}\n                  </span>\n                );\n              } else {\n                return (\n                  <span\n                    className={styles.collaborator_removed}\n                    key={user.id}\n                    onClick={this.toggleSelectCollab}\n                    data-name={user.id}\n                  />\n                );\n              }\n            })\n          ) : (\n            <div className={styles.noCollabs}>\n              There are no collaborators yet.\n            </div>\n          )}\n        </li>\n        <li className={styles.search_container}>\n          <input\n            type=\"search\"\n            name=\"searchTerm\"\n            id=\"searchTerm\"\n            placeholder=\"Find a team member\"\n            className={styles.search_input}\n            value={this.state.searchTerm}\n            onChange={this.handleInput}\n          />\n          <ul className={styles.search_ul}>\n            {this.state.users.map(user => {\n              if (user.id !== this.props.created_by) {\n                return (\n                  <SearchResult\n                    result={user}\n                    toggleSelect={this.toggleSelect}\n                    key={user.id}\n                    checked={\n                      this.state.invited.includes(user.id) ? true : false\n                    }\n                  />\n                );\n              } else {\n                return null;\n              }\n            })}\n          </ul>\n          <div className={styles.search_buttons_li}>\n            <button\n              className={styles.search_button}\n              onClick={this.handleInvite}\n            >\n              Update Team\n            </button>\n            <button\n              className={styles.search_button}\n              onClick={this.handleCancel}\n              data-menu=\"collaboratorsMenu\"\n            >\n              Cancel\n            </button>\n          </div>\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n    collaborators: state.collaborators,\n    id: state.id,\n    created_by: state.created_by\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchGetUsers: searchTerm => {\n      return dispatch(actionsGetUsers(searchTerm));\n    },\n    dispatchInviteCollaborators: formData => {\n      return dispatch(actionsInviteCollaborators(formData));\n    }\n  };\n};\n\nexport default CollaboratorsMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CollaboratorsMenu);\n","import CollaboratorsMenu from \"./CollaboratorsMenu\";\n\nexport default CollaboratorsMenu;\n","import React, { Component } from \"react\";\nimport styles from \"./EditBoardMenu.module.scss\";\nimport { connect } from \"react-redux\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { actionsUpdateBoard } from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass EditBoardMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      details: \"\",\n      description: \"\",\n      url: \"\",\n      id: 0\n    };\n  }\n\n  componentDidMount = () => {\n    return this.setState({\n      name: this.props.name,\n      details: this.props.details,\n      description: this.props.description,\n      url: this.props.boardImage.url,\n      id: this.props.id,\n      is_archived: this.props.is_archived\n    });\n  };\n\n  updateBoard = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    let formData = { ...this.state };\n    delete formData.showMenu;\n\n    if (formData.name.length === 0) {\n      formData.name = this.props.name;\n    }\n    if (formData.url.length === 0) {\n      delete formData.url;\n    }\n\n    this.props.dispatchUpdateBoard(formData);\n    if (formData.is_archived) {\n      let username = JSON.parse(sessionStorage.getItem(\"user\")).username;\n      return this.props.history.push(`/dashboard/${username}/boards`);\n    } else {\n      return this.props.toggleMenu(e);\n    }\n  };\n\n  handleInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ [name]: value });\n  };\n\n  toggleColor = e => {\n    let { id } = e.target;\n    return this.setState({ url: id });\n  };\n\n  archive = e => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    return this.setState({ is_archived: !this.state.is_archived });\n  };\n\n  unarchive = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    return this.setState({ is_archived: false }, this.updateBoard);\n  };\n\n  stopPropagation = e => {\n    return e.stopPropagation();\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.updateBoard}\n        className={styles.EditBoardMenu}\n        onClick={this.stopPropagation}\n        data-menu=\"editBoardMenu\"\n      >\n        <label>\n          Board Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInput}\n            placeholder={this.props.name}\n          />\n        </label>\n\n        <label>\n          Description\n          <TextareaAutosize\n            name=\"description\"\n            minRows={1}\n            onChange={this.handleInput}\n            value={this.state.description}\n          ></TextareaAutosize>\n        </label>\n\n        <label>\n          Background\n          <div className={styles.colorPickerContainer}>\n            <div className={styles.colorPickerOptionsContainer}>\n              {!this.props.colors\n                ? null\n                : Object.keys(this.props.colors).map(color => {\n                    let style = { backgroundColor: color };\n                    let checked = false;\n                    if (\n                      this.props.boardImage &&\n                      this.props.boardImage.url === color\n                    ) {\n                      checked = true;\n                    }\n                    return (\n                      <label\n                        key={color}\n                        className={styles.colorPickerLabel}\n                        style={style}\n                        onClick={this.toggleColor}\n                        name={color}\n                      >\n                        <input\n                          type=\"radio\"\n                          className={styles.colorPickerInput}\n                          name=\"color\"\n                          id={color}\n                          defaultChecked={checked}\n                        />\n                        <span className={styles.colorPickerCustom}></span>\n                      </label>\n                    );\n                  })}\n            </div>\n          </div>\n        </label>\n        <div className={styles.form_buttons_container}>\n          <button type=\"submit\">Save</button>\n          <button\n            type=\"button\"\n            data-menu=\"editBoardMenu\"\n            onClick={this.props.toggleMenu}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            className={styles.buttons_archiveBoard}\n            onClick={this.archive}\n            style={\n              this.state.is_archived ? { backgroundColor: \"#eb5946\" } : null\n            }\n          >\n            {this.state.is_archived ? \"Unarchive\" : \"Archive\"}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.initLabels,\n    name: state.name,\n    description: state.description,\n    boardImage: state.boardImage,\n    id: state.id,\n    is_archived: state.is_archived\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchUpdateBoard: formData => {\n      return dispatch(actionsUpdateBoard(formData));\n    }\n  };\n};\n\nexport default withRouter(\n  (EditBoardMenu = connect(mapStateToProps, mapDispatchToProps)(EditBoardMenu))\n);\n","import EditBoardMenu from \"./EditBoardMenu\";\nexport default EditBoardMenu;\n","import BoardMenu from \"./BoardMenu\";\nexport default BoardMenu;\n","import React, { Component } from \"react\";\nimport styles from \"./BoardMenu.module.scss\";\nimport LabelsMenu from \"../LabelsMenu\";\nimport ArchivedItems from \"../ArchivedItems\";\nimport CollaboratorsMenu from \"../CollaboratorsMenu\";\nimport EditBoardMenu from \"../EditBoardMenu\";\n\nclass BoardMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      labelsMenu: false,\n      collaboratorsMenu: false,\n      editBoardMenu: false\n    };\n  }\n\n  toggle = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      let { id } = e.target;\n      if (id) {\n        return this.setState({ [id]: !this.state[id] });\n      } else if (e.target.dataset.menu) {\n        return this.setState({\n          [e.target.dataset.menu]: !this.state[e.target.dataset.menu]\n        });\n      }\n    }\n  };\n\n  stopPropagation = e => {\n    return e.stopPropagation();\n  };\n\n  render() {\n    return (\n      <div\n        className={styles.BoardMenuContainer}\n        onClick={this.props.toggleMenu}\n      >\n        <ul className={styles.BoardMenu} onClick={this.stopPropagation}>\n          <div className={styles.menuHeader}>\n            <h3>Menu </h3>\n            <button\n              className={styles.exitButton}\n              onClick={this.props.toggleMenu}\n            ></button>\n          </div>\n          <hr></hr>\n          <li\n            className={styles.MenuOption}\n            id=\"editBoardMenu\"\n            onClick={this.toggle}\n          >\n            Edit Board\n          </li>\n          {this.state.editBoardMenu ? (\n            <EditBoardMenu toggleMenu={this.toggle} />\n          ) : null}\n          {/* Collaborators */}\n          <li\n            className={styles.MenuOption}\n            id=\"collaboratorsMenu\"\n            onClick={this.toggle}\n          >\n            Collaborators\n          </li>\n          {this.state.collaboratorsMenu ? (\n            <CollaboratorsMenu toggleMenu={this.toggle} />\n          ) : null}\n          {/* Labels */}\n          <li\n            className={styles.MenuOption}\n            id=\"labelsMenu\"\n            onClick={this.toggle}\n          >\n            Labels\n          </li>\n          {this.state.labelsMenu ? <LabelsMenu /> : null}\n          {/* Archived Items */}\n          <li\n            className={styles.MenuOption}\n            id=\"archivedItems\"\n            onClick={this.toggle}\n          >\n            Archived Items\n          </li>\n          {this.state.archivedItems ? <ArchivedItems /> : null}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default BoardMenu;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  actionsCreateList,\n  actionsUpdateBoard,\n  actionsUpdateCard,\n  actionsGetBoardData,\n  actionsUpdateCardStore,\n  actionsUpdateList,\n  actionsUpdateListStore\n} from \"../../actions\";\nimport List from \"../List\";\nimport BoardMenu from \"../BoardMenu\";\nimport ProfileButton from \"../ProfileButton\";\nimport ProfileMenu from \"../ProfileMenu\";\nimport ReturnButton from \"../ReturnButton\";\nimport styles from \"./Board.module.scss\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Link } from \"react-router-dom\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: { name: \"\" },\n      list: { name: \"\" },\n      showMenu: false,\n      showProfileMenu: false,\n      showNameReturn: false,\n      showAddListReturn: false\n    };\n  }\n\n  componentDidMount = () => {\n    let id = parseInt(window.location.pathname.split(\"/\")[2]);\n    return this.props.dispatchGetBoardData(id);\n  };\n\n  toggleMenu = e => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.setState({ showMenu: !this.state.showMenu });\n  };\n\n  updateBoard = e => {\n    e.preventDefault();\n    let formData = {\n      ...this.state.board,\n      id: this.props.board_id\n    };\n\n    if (formData.name.length === 0) {\n      formData.name = this.props.name;\n    }\n    this.props.dispatchUpdateBoard(formData);\n\n    return this.setState({ showNameReturn: false });\n  };\n\n  createList = e => {\n    e.preventDefault();\n    if (this.state.list.name.length === 0) {\n      return this.setState({ list: { name: \"\" } });\n    }\n    let lists = this.props.lists;\n    let position;\n    if (lists.length === 0) {\n      position = 1;\n    } else {\n      position = parseInt(parseFloat(lists[lists.length - 1].position) + 1);\n    }\n    let formData = {\n      ...this.state.list,\n      board_id: this.props.board_id,\n      position\n    };\n\n    this.props.dispatchCreateList(formData);\n    return this.setState({ list: { name: \"\" }, showAddListReturn: false });\n  };\n\n  handleBoardInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ board: { [name]: value } });\n  };\n\n  handleListInput = e => {\n    const { value, name } = e.target;\n    return this.setState({ list: { [name]: value } });\n  };\n\n  handleInputClick = e => {\n    const { placeholder } = e.target;\n    return this.setState({\n      board: { name: placeholder },\n      showNameReturn: true\n    });\n  };\n\n  onDragEnd = result => {\n    const { destination, source, type } = result;\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    //if draggable type is a list\n    if (type === \"lists\") {\n      let copyOfPropsLists = [...this.props.lists];\n      let listToMove = this.props.lists[source.index];\n\n      //if list was moved to the right\n      if (destination.index > source.index) {\n        copyOfPropsLists.splice(destination.index + 1, 0, listToMove);\n        copyOfPropsLists.splice(source.index, 1);\n      } else {\n        //if list was moved to the left\n        copyOfPropsLists.splice(source.index, 1);\n        copyOfPropsLists.splice(destination.index, 0, listToMove);\n      }\n\n      let formData = this.updatePosition(copyOfPropsLists, destination.index);\n      delete formData.cards;\n\n      this.props.dispatchUpdateListStore(formData);\n      return this.props.dispatchUpdateList(formData);\n    }\n\n    let cardsInOldList;\n\n    // if card is moved to a new list\n    if (destination.droppableId !== source.droppableId) {\n      cardsInOldList = this.props.cards\n        .filter(card => {\n          return card.list_id === parseInt(source.droppableId);\n        })\n        .sort((a, b) => {\n          return parseFloat(a.position) - parseFloat(b.position);\n        });\n    }\n\n    // creates an array of the cards in the destination list\n    let cardsInList = this.props.cards\n      .filter(card => {\n        return card.list_id === parseInt(destination.droppableId);\n      })\n      .sort((a, b) => {\n        return parseFloat(a.position) - parseFloat(b.position);\n      });\n\n    const newCardsInList = [...cardsInList];\n\n    // removes the card from it's old position in the list\n    if (destination.droppableId !== source.droppableId) {\n      if (newCardsInList.length === 0) {\n        newCardsInList.push(cardsInOldList[source.index]);\n      } else {\n        newCardsInList.splice(\n          destination.index,\n          0,\n          cardsInOldList[source.index]\n        );\n      }\n      cardsInOldList.splice(source.index, 1);\n    } else {\n      newCardsInList.splice(source.index, 1);\n      newCardsInList.splice(destination.index, 0, cardsInList[source.index]);\n    }\n\n    let newCard = this.updatePosition(newCardsInList, destination.index);\n\n    if (destination.droppableId !== source.droppableId) {\n      newCard.list_id = parseInt(destination.droppableId);\n    }\n\n    let formData = Object.assign(\n      {},\n      { id: newCard.id, list_id: newCard.list_id, position: newCard.position }\n    );\n\n    this.props.dispatchUpdateCardStore(formData);\n\n    return this.props.dispatchUpdateCard(formData);\n  };\n\n  updatePosition = (array, destinationIndex) => {\n    if (destinationIndex === 0) {\n      if (array.length === 1) {\n        array[0].position = \"1.00\";\n      } else {\n        array[destinationIndex].position = (\n          parseFloat(array[1].position) / 2\n        ).toString();\n      }\n    } else if (destinationIndex === array.length - 1) {\n      array[destinationIndex].position = (\n        parseFloat(array[destinationIndex - 1].position) + 1\n      ).toString();\n    } else {\n      array[destinationIndex].position = (\n        (parseFloat(array[destinationIndex - 1].position) +\n          parseFloat(array[destinationIndex + 1].position)) /\n        2\n      ).toString();\n    }\n\n    return array[destinationIndex];\n  };\n\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      return e.target.blur();\n    }\n  };\n\n  handleAddListClick = () => {\n    return this.setState({ showAddListReturn: true });\n  };\n\n  toggleProfileMenu = e => {\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    return this.setState({ showProfileMenu: !this.state.showProfileMenu });\n  };\n\n  handleBoardNameBlur = e => {\n    e.preventDefault();\n\n    return setTimeout(() => {\n      return this.setState({\n        showNameReturn: false,\n        board: { name: this.props.name }\n      });\n    }, 500);\n  };\n\n  handleCreateListBlur = e => {\n    e.preventDefault();\n\n    return setTimeout(() => {\n      return this.setState({\n        showAddListReturn: false,\n        list: { name: \"\" }\n      });\n    }, 500);\n  };\n\n  render() {\n    let boardStyle;\n    if (this.props.boardImage && this.props.boardImage.url.startsWith(\"#\")) {\n      boardStyle = { backgroundColor: this.props.boardImage.url };\n    } else if (this.props.boardImage) {\n      boardStyle = {\n        backgroundImage: `url(${this.props.boardImage.url})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      };\n    } else {\n      boardStyle = { backgroundColor: \"white\" };\n    }\n\n    return (\n      <div className={styles.Board} style={boardStyle}>\n        <ProfileButton\n          username={JSON.parse(sessionStorage.getItem(\"user\")).username}\n          toggleProfileMenu={this.toggleProfileMenu}\n        />\n        {this.state.showProfileMenu ? (\n          <ProfileMenu toggleThis={this.toggleProfileMenu} />\n        ) : null}\n        <div className={styles.boardHeader}>\n          {/* Board Name */}\n          <form\n            onSubmit={this.updateBoard}\n            className={styles.boardName_form}\n            onBlur={this.handleBoardNameBlur}\n          >\n            <input\n              className={styles.boardName}\n              type=\"text\"\n              name=\"name\"\n              size={this.props.name ? this.props.name.length : null}\n              value={this.state.board.name}\n              placeholder={this.props.name}\n              onChange={this.handleBoardInput}\n              onClick={this.handleInputClick}\n              onKeyPress={this.handleKeyPress}\n              autoComplete=\"off\"\n            />\n            {this.state.showNameReturn ? (\n              <ReturnButton func={this.updateBoard} />\n            ) : null}\n          </form>\n          <Link className={styles.Link} to=\"/\">\n            <button className={styles.homeButton} />\n          </Link>\n          <button onClick={this.toggleMenu} className={styles.boardMenuButton}>\n            Board Menu\n          </button>\n        </div>\n\n        {this.state.showMenu ? (\n          <BoardMenu toggleMenu={this.toggleMenu} />\n        ) : null}\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          {/* Lists */}\n          <Droppable\n            droppableId=\"horizontalDroppable\"\n            type=\"lists\"\n            direction=\"horizontal\"\n          >\n            {provided => {\n              return (\n                <ul\n                  className={styles.Lists}\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {this.props.lists\n                    ? this.props.lists\n                        .sort((a, b) => {\n                          return (\n                            parseFloat(a.position) - parseFloat(b.position)\n                          );\n                        })\n                        .map((list, index) => {\n                          if (list.is_archived) {\n                            return null;\n                          } else {\n                            return (\n                              <List\n                                handleKeyPress={this.handleKeyPress}\n                                list={list}\n                                key={list.id}\n                                index={index}\n                                cards={this.props.cards\n                                  .filter(card => {\n                                    return card.list_id === list.id;\n                                  })\n                                  .sort((a, b) => {\n                                    return (\n                                      parseFloat(a.position) -\n                                      parseFloat(b.position)\n                                    );\n                                  })}\n                              />\n                            );\n                          }\n                        })\n                    : null}\n\n                  {/* Add List */}\n                  <form\n                    onSubmit={this.createList}\n                    className={styles.addListForm}\n                    onBlur={this.handleCreateListBlur}\n                  >\n                    <input\n                      className={styles.addList}\n                      name=\"name\"\n                      value={this.state.list.name}\n                      placeholder=\"+ Add List\"\n                      onChange={this.handleListInput}\n                      onKeyPress={this.handleKeyPress}\n                      onClick={this.handleAddListClick}\n                      autoComplete=\"off\"\n                    />\n                    {this.state.showAddListReturn ? (\n                      <ReturnButton func={this.createList} />\n                    ) : null}\n                  </form>\n                  {provided.placeholder}\n                </ul>\n              );\n            }}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    name: state.name,\n    lists: state.lists,\n    labels: state.labels,\n    board_id: state.id,\n    cards: state.cards,\n    boardImage: state.boardImage,\n    labelColors: state.initLabels,\n    unauthorized: state.unauthorized\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchCreateList: formData => {\n      return dispatch(actionsCreateList(formData));\n    },\n    dispatchUpdateBoard: formData => {\n      return dispatch(actionsUpdateBoard(formData));\n    },\n    dispatchUpdateCard: formData => {\n      return dispatch(actionsUpdateCard(formData));\n    },\n    dispatchGetBoardData: boardID => {\n      return dispatch(actionsGetBoardData(boardID));\n    },\n    dispatchUpdateCardStore: formData => {\n      return dispatch(actionsUpdateCardStore(formData));\n    },\n    dispatchUpdateListStore: formData => {\n      return dispatch(actionsUpdateListStore(formData));\n    },\n    dispatchUpdateList: formData => {\n      return dispatch(actionsUpdateList(formData));\n    }\n  };\n};\n\nexport default Board = connect(mapStateToProps, mapDispatchToProps)(Board);\n","import Board from \"./Board\";\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionsToggleModal } from \"../../actions\";\nimport styles from \"./Modals.module.scss\";\n\nclass Modals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: \"\"\n    };\n  }\n\n  toggleModal = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.props.dispatchToggleModal();\n  };\n\n  render() {\n    switch (this.props.showModal) {\n      default:\n        return <div className={styles.Modals} onClick={this.toggleModal}></div>;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showModal: state.showModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchToggleModal: () => {\n      return dispatch(actionsToggleModal());\n    }\n  };\n};\n\nexport default Modals = connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import Modals from \"./Modals\";\nexport default Modals;\n","import React from \"react\";\nimport styles from \"./AppPage.module.scss\";\nimport BoardsList from \"../../components/BoardsList\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Board from \"../../components/Board\";\nimport Modals from \"../../components/Modals\";\n\nlet AppPage = props => {\n  if (!sessionStorage.getItem(\"user\")) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className={styles.AppPage}>\n      {props.showModal ? <Modals /> : null}\n\n      {window.location.pathname.startsWith(\"/dashboard/\") ? (\n        <BoardsList />\n      ) : (\n        <Board />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    showModal: state.showModal\n  };\n};\n\nexport default AppPage = connect(mapStateToProps, null)(AppPage);\n","import AppPage from \"./AppPage\";\n\nexport default AppPage;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport AuthPage from \"../pages/AuthPage\";\nimport AppPage from \"../pages/AppPage\";\n\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport { actionsGetUser } from \"../actions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount = () => {\n    //necessary for refreshing the page, without it the url doesn't exist and the page goes to 404 error\n    if (sessionStorage.getItem(\"user\")) {\n      let id = JSON.parse(sessionStorage.getItem(\"user\")).id;\n      return this.props.dispatchGetUser(id);\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    if (\n      prevProps.boards !== this.props.boards ||\n      prevProps.collaborations !== this.props.collaborations\n    ) {\n      return this.setState({\n        boards: [...this.props.boards],\n        collaborations: [...this.props.collaborations]\n      });\n    }\n  };\n\n  render() {\n    let fallBack = \"/\";\n    let user;\n\n    if (sessionStorage.getItem(\"user\"))\n      user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path={[\"/login\", \"/register\"]} exact component={AuthPage} />\n            <Route\n              path={user ? `/dashboard/${user.username}/boards` : fallBack}\n              exact\n              component={AppPage}\n            />\n            {/* creates a private route for each of the user's boards */}\n            {this.state.boards\n              ? this.state.boards.map(board => {\n                  return (\n                    <Route\n                      key={board.id}\n                      path={`/b/${board.id}/`}\n                      exact={false}\n                      strict\n                      component={AppPage}\n                    />\n                  );\n                })\n              : null}\n            {/* creates a private route for each of the user's collaborations */}\n            {this.state.collaborations\n              ? this.state.collaborations.map(board => {\n                  return (\n                    <Route\n                      key={board.id}\n                      path={`/b/${board.id}/${board.name}`}\n                      exact\n                      component={AppPage}\n                    />\n                  );\n                })\n              : null}\n            <Redirect\n              from=\"/\"\n              to={\n                sessionStorage.getItem(\"user\")\n                  ? `/dashboard/${\n                      JSON.parse(sessionStorage.getItem(\"user\")).username\n                    }/boards`\n                  : \"/login\"\n              }\n              exact={true}\n            />\n            <Route component={AppPage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: sessionStorage.getItem(\"user\")\n      ? JSON.parse(sessionStorage.getItem(\"user\")).username\n      : undefined,\n    boards: state.boards,\n    collaborations: state.collaborations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchGetUser: id => {\n      return dispatch(actionsGetUser(id));\n    }\n  };\n};\n\nexport default App = connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_BOARDS,\n  GET_BOARD_DATA,\n  CREATE_BOARD,\n  CREATE_LIST,\n  CREATE_CARD,\n  CREATE_LABEL,\n  UPDATE_BOARD,\n  UPDATE_LIST,\n  UPDATE_CARD,\n  UPDATE_LABEL,\n  UPDATE_CARD_IN_STORE,\n  UPDATE_LIST_IN_STORE,\n  LOGIN_USER,\n  LOGOUT_USER,\n  REGISTER_USER,\n  TOGGLE_MODAL,\n  GET_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  LOGIN_ERROR,\n  GET_USERS,\n  INVITE_COLLABORATORS,\n  UNAUTHORIZED_ACTION_ERROR,\n  UPDATE_CARD_FROM_TODO\n} from \"../actions\";\n\nlet initialState = {\n  username: sessionStorage.getItem(\"user\")\n    ? JSON.parse(sessionStorage.getItem(\"user\")).username\n    : undefined,\n  initLabels: {\n    \"#61be4f\": { color: \"#61be4f\" },\n    \"#f2d600\": { color: \"#f2d600\" },\n    \"#ff9f1a\": { color: \"#ff9f1a\" },\n    \"#eb5946\": { color: \"#eb5946\" },\n    \"#c377e0\": { color: \"#c377e0\" },\n    \"#0079bf\": { color: \"#0079bf\" },\n    \"#00c2e0\": { color: \"#00c2e0\" },\n    \"#ff77cb\": { color: \"#ff77cb\" },\n    \"#344562\": { color: \"#344562\" }\n  },\n  showModal: false,\n  isLoggedIn: sessionStorage.getItem(\"user\") ? true : false,\n  unauthorized: false\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n  console.log(action.payload);\n  switch (action.type) {\n    case UPDATE_CARD_FROM_TODO:\n      let updateCardsFromToDo = [...state.cardsAssigned];\n      for (let i = 0; i < updateCardsFromToDo.length; i++) {\n        if (updateCardsFromToDo[i].id === action.payload.id) {\n          updateCardsFromToDo.splice(i, 1, action.payload);\n          if (state.id && state.cards && state.id === action.payload.board_id) {\n            let updateCardFromToDoTwo = [...state.cards];\n            for (let j = 0; j < updateCardFromToDoTwo.length; j++) {\n              if (updateCardFromToDoTwo[j].id === action.payload.id) {\n                updateCardFromToDoTwo.splice(j, 1, action.payload);\n                return Object.assign({}, state, {\n                  cardsAssigned: updateCardsFromToDo,\n                  cards: updateCardFromToDoTwo\n                });\n              }\n            }\n          } else {\n            return Object.assign({}, state, {\n              cardsASsigned: updateCardsFromToDo\n            });\n          }\n        }\n      }\n      break;\n\n    case UNAUTHORIZED_ACTION_ERROR:\n      alert(\"Only the owner of this board can do that.\");\n      window.location.reload();\n      return state;\n\n    case INVITE_COLLABORATORS:\n      return Object.assign({}, state, action.payload);\n\n    case GET_USERS:\n      return Object.assign({}, state, { users: action.payload });\n\n    case LOGIN_ERROR:\n      return Object.assign({}, state, { loginError: true });\n\n    case DELETE_USER:\n      if (sessionStorage.getItem(\"user\")) {\n        sessionStorage.removeItem(\"user\");\n      }\n      if (localStorage.getItem(\"user\")) {\n        localStorage.removeItem(\"user\");\n      }\n\n      return Object.assign({}, state, {\n        isLoggedIn: false,\n        username: \"\",\n        showModal: false\n      });\n\n    case UPDATE_USER:\n      sessionStorage.setItem(\"user\", JSON.stringify({ ...action.payload }));\n      let updateUser = { ...action.payload };\n      updateUser.user_id = action.payload.id;\n      delete updateUser.id;\n\n      if (state.showModal === \"profile\") {\n        return Object.assign({}, state, {\n          showModal: false,\n          ...updateUser\n        });\n      } else {\n        return Object.assign({}, state, { ...updateUser });\n      }\n\n    case GET_USER:\n      let getUser = { ...action.payload };\n      getUser.user_id = action.payload.id;\n      delete getUser.id;\n\n      return Object.assign({}, state, { ...getUser });\n\n    case TOGGLE_MODAL:\n      return Object.assign({}, state, { showModal: action.payload });\n\n    case LOGIN_USER:\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.username));\n      sessionStorage.setItem(\"user\", JSON.stringify({ ...action.payload }));\n      return Object.assign({}, state, {\n        isLoggedIn: true,\n        username: action.payload.username,\n        loginError: \"\"\n      });\n\n    case LOGOUT_USER:\n      if (sessionStorage.getItem(\"user\")) {\n        sessionStorage.removeItem(\"user\");\n      }\n      if (localStorage.getItem(\"user\")) {\n        localStorage.removeItem(\"user\");\n      }\n\n      return Object.assign({}, state, {\n        isLoggedIn: false,\n        username: \"\",\n        showModal: false\n      });\n\n    case REGISTER_USER:\n      localStorage.setItem(\"user\", action.payload.username);\n\n      return state;\n\n    case UPDATE_LIST_IN_STORE:\n      let updateListsInStore = [...state.lists];\n\n      for (let i = 0; i < updateListsInStore.length; i++) {\n        if (updateListsInStore[i].id === action.payload.id) {\n          updateListsInStore[i] = Object.assign(\n            {},\n            { ...updateListsInStore[i] },\n            { ...action.payload }\n          );\n        }\n      }\n\n      return Object.assign({}, state, { lists: updateListsInStore });\n\n    case UPDATE_CARD_IN_STORE:\n      let updateCardsInStore = [...state.cards];\n      for (let i = 0; i < updateCardsInStore.length; i++) {\n        if (updateCardsInStore[i].id === action.payload.id) {\n          updateCardsInStore[i] = Object.assign(\n            {},\n            { ...updateCardsInStore[i] },\n            { ...action.payload }\n          );\n        }\n      }\n\n      return Object.assign({}, state, { cards: updateCardsInStore });\n\n    case UPDATE_CARD:\n      let updateCards = [...state.cards];\n      for (let i = 0; i < updateCards.length; i++) {\n        if (updateCards[i].id === action.payload.id) {\n          updateCards.splice(i, 1, action.payload);\n          let updateCardsTwo = [...state.cardsAssigned];\n\n          for (let j = 0; j < updateCardsTwo.length; j++) {\n            if (updateCardsTwo[j].id === action.payload.id) {\n              updateCardsTwo.splice(j, 1, action.payload);\n\n              return Object.assign({}, state, {\n                cardsAssigned: updateCardsTwo,\n                cards: updateCards\n              });\n            }\n          }\n\n          return Object.assign({}, state, { cards: updateCards });\n        }\n      }\n\n      break;\n\n    case UPDATE_LABEL:\n      let updateLabel = { ...state.labels };\n      updateLabel[action.payload.color] = action.payload;\n      return Object.assign({}, state, { labels: updateLabel });\n\n    case UPDATE_LIST:\n      let updateList = [...state.lists];\n      for (let i = 0; i < updateList.length; i++) {\n        if (updateList[i].id === action.payload.id) {\n          updateList.splice(i, 1, action.payload);\n          return Object.assign({}, state, { lists: updateList });\n        }\n      }\n      break;\n\n    case UPDATE_BOARD:\n      if (state.boards) {\n        let updateBoard = [...state.boards];\n        for (let i = 0; i < updateBoard.length; i++) {\n          if (updateBoard[i].id === action.payload.id) {\n            updateBoard.splice(i, 1, action.payload);\n\n            return Object.assign({}, state, {\n              boards: updateBoard,\n              ...action.payload\n            });\n          }\n        }\n      }\n\n      return Object.assign({}, state, { ...action.payload });\n\n    case CREATE_LABEL:\n      let createLabel = { ...state.labels };\n      createLabel[action.payload.color] = action.payload;\n      return Object.assign({}, state, { labels: createLabel });\n\n    case CREATE_CARD:\n      let createCard = [...state.cards];\n      createCard.push(action.payload);\n      return Object.assign({}, state, { cards: createCard });\n\n    case CREATE_LIST:\n      let createList = [...state.lists];\n      createList.push(action.payload);\n      return Object.assign({}, state, { lists: createList });\n\n    case CREATE_BOARD:\n      let createBoard = [...state.boards];\n      createBoard.push(action.payload);\n      return Object.assign({}, state, { boards: createBoard });\n\n    case GET_BOARD_DATA:\n      let getBoardDataInitLabels = { ...state.initLabels };\n      let { labels } = action.payload;\n\n      for (let i = 0; i < labels.length; i++) {\n        getBoardDataInitLabels[labels[i].color] = labels[i];\n      }\n\n      if (action.payload.lists) {\n        let getBoardDataLists = [...action.payload.lists];\n        action.payload.lists = getBoardDataLists.sort((a, b) => {\n          return parseFloat(a.position) - parseFloat(b.position);\n        });\n      }\n\n      action.payload.labels = getBoardDataInitLabels;\n      return Object.assign({}, state, action.payload);\n\n    case GET_BOARDS:\n      return Object.assign({}, state, { boards: action.payload });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./reducers\"; //import whatever reducer your make to handle your various types of requests;\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension's options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(ReduxThunk)); //applyMiddleware to connect redux\n\nconst store = createStore(reducer, enhancer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardMenu\":\"CardMenu_CardMenu__2MHGr\",\"updateCardContainer\":\"CardMenu_updateCardContainer__1k5_Q\",\"updateCardForm\":\"CardMenu_updateCardForm__2BF5Q\",\"buttonsContainer\":\"CardMenu_buttonsContainer__25zPZ\",\"saveButton\":\"CardMenu_saveButton__3MrRf\",\"labelsContainer\":\"CardMenu_labelsContainer__2tynj\",\"Label\":\"CardMenu_Label__3jHkN\",\"labelsButton\":\"CardMenu_labelsButton__3aDNz\",\"cardMenuHeader\":\"CardMenu_cardMenuHeader__3HMFy\",\"cardMenuHeaderInputs\":\"CardMenu_cardMenuHeaderInputs__1fq7T\",\"updateCardName\":\"CardMenu_updateCardName__UpfcT\",\"exitButton\":\"CardMenu_exitButton__34arB\",\"listsContainer\":\"CardMenu_listsContainer__w5AVm\",\"editDetails\":\"CardMenu_editDetails__3wu-v\",\"dueDate\":\"CardMenu_dueDate__2x1zC\",\"assigned_created_container\":\"CardMenu_assigned_created_container__DSukU\",\"assignedTo\":\"CardMenu_assignedTo__3o1Sk\",\"createdBy\":\"CardMenu_createdBy__-qSDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnailContainer\":\"BoardThumbnail_thumbnailContainer__2KyKT\",\"BoardThumbnail\":\"BoardThumbnail_BoardThumbnail__3d8pU\",\"menuButton\":\"BoardThumbnail_menuButton__2k7jS\",\"unarchiveButton\":\"BoardThumbnail_unarchiveButton__1zkCZ\",\"updateBoardContainer\":\"BoardThumbnail_updateBoardContainer__3DgsU\",\"updateBoard\":\"BoardThumbnail_updateBoard__GAYtB\",\"colorPickerContainer\":\"BoardThumbnail_colorPickerContainer__20fAs\",\"colorPickerOptionsContainer\":\"BoardThumbnail_colorPickerOptionsContainer__7amL9\",\"colorPickerLabel\":\"BoardThumbnail_colorPickerLabel__3MLtV\",\"colorPickerInput\":\"BoardThumbnail_colorPickerInput__3Pdqj\",\"colorPickerCustom\":\"BoardThumbnail_colorPickerCustom__282_W\",\"buttonsContainer\":\"BoardThumbnail_buttonsContainer__1Ap7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__37Yu0\",\"card_labelsAndMenu\":\"Card_card_labelsAndMenu__Pu1u9\",\"labelsContainer\":\"Card_labelsContainer__1zS0v\",\"Label\":\"Card_Label__3gIJZ\",\"menuButton\":\"Card_menuButton__3TPxw\",\"cardBody\":\"Card_cardBody__uWQ27\",\"cardName\":\"Card_cardName__2dvSM\",\"card_extraInfo\":\"Card_card_extraInfo__LrDvz\",\"card_extraInfo_userInfo\":\"Card_card_extraInfo_userInfo__p7F2l\",\"extraInfo_details\":\"Card_extraInfo_details__2WSK8\",\"details_middle\":\"Card_details_middle__3J_OJ\",\"details_bottom\":\"Card_details_bottom__2Yln5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewBoard\":\"AddNewBoard_AddNewBoard__1VoWN\",\"addNewBoardForm\":\"AddNewBoard_addNewBoardForm__1QVH_\",\"subHeader\":\"AddNewBoard_subHeader__xXaGF\",\"nameInput\":\"AddNewBoard_nameInput__2N1BR\",\"buttonsContainer\":\"AddNewBoard_buttonsContainer__kMrUz\",\"colorPickerContainer\":\"AddNewBoard_colorPickerContainer__llW8Q\",\"colorPickerOptionsContainer\":\"AddNewBoard_colorPickerOptionsContainer__u2twX\",\"colorPickerLabel\":\"AddNewBoard_colorPickerLabel__2kNHq\",\"colorPickerInput\":\"AddNewBoard_colorPickerInput__1cVAm\",\"colorPickerCustom\":\"AddNewBoard_colorPickerCustom__bTr4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginComponent\":\"LoginComponent_loginComponent__hwUB8\",\"error\":\"LoginComponent_error__1oyk3\",\"form_ul\":\"LoginComponent_form_ul__21qMz\",\"form_li\":\"LoginComponent_form_li___SRy0\",\"form_input\":\"LoginComponent_form_input__2hgcs\",\"login_button\":\"LoginComponent_login_button__1RbaU\",\"optionsContainer\":\"LoginComponent_optionsContainer__1eCzM\",\"options_span\":\"LoginComponent_options_span__3hmJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditProfileMenu_form\":\"EditProfileMenu_EditProfileMenu_form__OxLZn\",\"form_label\":\"EditProfileMenu_form_label__3jC2w\",\"form_input\":\"EditProfileMenu_form_input__1_TPz\",\"form_buttons_container\":\"EditProfileMenu_form_buttons_container__1zrcJ\",\"delete_account_button\":\"EditProfileMenu_delete_account_button__OInQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CollaboratorsMenu\":\"CollaboratorsMenu_CollaboratorsMenu__14Hyt\",\"collabs_container\":\"CollaboratorsMenu_collabs_container__9a2WV\",\"noCollabs\":\"CollaboratorsMenu_noCollabs__3OjCB\",\"collaborator\":\"CollaboratorsMenu_collaborator__1K8Zi\",\"collaborator_removed\":\"CollaboratorsMenu_collaborator_removed__1izpL\",\"search_container\":\"CollaboratorsMenu_search_container__1RpoV\",\"search_input\":\"CollaboratorsMenu_search_input__2IPc5\",\"search_ul\":\"CollaboratorsMenu_search_ul__2awwF\",\"search_buttons_li\":\"CollaboratorsMenu_search_buttons_li__36zTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__3IbYL\",\"boardHeader\":\"Board_boardHeader__xOx8O\",\"boardName_form\":\"Board_boardName_form__3U_bB\",\"boardName\":\"Board_boardName__odiOx\",\"Link\":\"Board_Link__3IDDg\",\"homeButton\":\"Board_homeButton__1Doxb\",\"boardMenuButton\":\"Board_boardMenuButton__3Ynpe\",\"Lists\":\"Board_Lists__iMgUN\",\"addListForm\":\"Board_addListForm__2WaID\",\"addList\":\"Board_addList__Mwrg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoardsList\":\"BoardsList_BoardsList__3jw_G\",\"noArchivedBoardsMessage\":\"BoardsList_noArchivedBoardsMessage__2wBWp\",\"BoardsContainer\":\"BoardsList_BoardsContainer__R8qnu\",\"container\":\"BoardsList_container__3M8B8\",\"BoardThumbnail\":\"BoardsList_BoardThumbnail__2AAZ1\",\"showArchivedButton\":\"BoardsList_showArchivedButton__p9kr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardLabels\":\"CardLabels_CardLabels__3A0k4\",\"cardLabelsHeader\":\"CardLabels_cardLabelsHeader__JrnPA\",\"exitButton\":\"CardLabels_exitButton__2KZXS\",\"cardLabelsForm\":\"CardLabels_cardLabelsForm__Tf6zG\",\"saveButton\":\"CardLabels_saveButton__2j5uj\",\"checkboxLabel\":\"CardLabels_checkboxLabel__142Wa\",\"checkboxInput\":\"CardLabels_checkboxInput__1kdP9\",\"checkboxCustom\":\"CardLabels_checkboxCustom__2rDw6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoardMenuContainer\":\"BoardMenu_BoardMenuContainer__3XTbl\",\"BoardMenu\":\"BoardMenu_BoardMenu__3zqdF\",\"menuHeader\":\"BoardMenu_menuHeader__1C1op\",\"exitButton\":\"BoardMenu_exitButton__xRzKa\",\"MenuOption\":\"BoardMenu_MenuOption__3P_Nw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArchivedItems\":\"ArchivedItems_ArchivedItems__ReWzw\",\"menuContainer\":\"ArchivedItems_menuContainer__1VEli\",\"cardsListsToggleButton\":\"ArchivedItems_cardsListsToggleButton__t-uPM\",\"itemsList\":\"ArchivedItems_itemsList__E2vAl\",\"archivedContainer\":\"ArchivedItems_archivedContainer__uphxH\",\"unarchiveButton\":\"ArchivedItems_unarchiveButton__2excA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditBoardMenu\":\"EditBoardMenu_EditBoardMenu__3BsS5\",\"colorPickerContainer\":\"EditBoardMenu_colorPickerContainer__2SJHU\",\"colorPickerOptionsContainer\":\"EditBoardMenu_colorPickerOptionsContainer__3vGFh\",\"colorPickerLabel\":\"EditBoardMenu_colorPickerLabel__3Bfid\",\"colorPickerInput\":\"EditBoardMenu_colorPickerInput__3yCFi\",\"colorPickerCustom\":\"EditBoardMenu_colorPickerCustom__1rxQC\",\"buttonsContainer\":\"EditBoardMenu_buttonsContainer__129mk\",\"form_buttons_container\":\"EditBoardMenu_form_buttons_container__1L5Ui\",\"buttons_archiveBoard\":\"EditBoardMenu_buttons_archiveBoard__2jcRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileMenu_container\":\"ProfileMenu_ProfileMenu_container__20PvB\",\"ProfileMenu\":\"ProfileMenu_ProfileMenu__1kzIU\",\"menuHeader\":\"ProfileMenu_menuHeader__2G58v\",\"exitButton\":\"ProfileMenu_exitButton__2omYv\",\"menu_li\":\"ProfileMenu_menu_li__t6TkQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AssignedCard\":\"AssignedCard_AssignedCard__1ZyvF\",\"labelsContainer\":\"AssignedCard_labelsContainer__22fHd\",\"Label\":\"AssignedCard_Label__e-nHz\",\"cardBody\":\"AssignedCard_cardBody__HyPP6\",\"content\":\"AssignedCard_content__3pnYP\",\"inWhere\":\"AssignedCard_inWhere__3dmyd\",\"cardName\":\"AssignedCard_cardName__3bEg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelsMenu\":\"LabelsMenu_LabelsMenu__2M6m6\",\"labelForm\":\"LabelsMenu_labelForm__3ECc8\",\"labelFormTextInput\":\"LabelsMenu_labelFormTextInput__1543l\",\"submitButton\":\"LabelsMenu_submitButton__2qI7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchResult\":\"SearchResult_SearchResult__12Gq2\",\"checkboxInput\":\"SearchResult_checkboxInput__30VO6\",\"checkedLabel\":\"SearchResult_checkedLabel__Exz9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthorizationModal_container__2mO4J\",\"authBox\":\"AuthorizationModal_authBox__TdrAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToDoList\":\"ToDoList_ToDoList__2r-Wj\",\"ToDoList_header\":\"ToDoList_ToDoList_header__1ZFJP\",\"noAssignedCards\":\"ToDoList_noAssignedCards__LulTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthPage\":\"AuthPage_AuthPage__2oFdj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppPage\":\"AppPage_AppPage__EKmNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileButton\":\"ProfileButton_ProfileButton__x_bQo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReturnButton\":\"ReturnButton_ReturnButton__3MzCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modals\":\"Modals_Modals__1gab2\"};"],"sourceRoot":""}